<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<!-- Player ship's interior -->

	<DockScreen UNID="&dsShipInterior;"
			name=				"Ship's Interior"
			>

		<Panes>
			<Default
					desc=	"You are inside the main compartment of your ship. A hatch in front of you opens into the cargo hold. To the side there is a small ladder that leads to the reactor and the ship's engines.">

				<Actions>
					<Action name="Ship Configuration" key="S">
						(scrShowScreen gScreen &dsShipConfig;)
					</Action>

					<Action name="Missions" key="M">
						(scrShowScreen gScreen &dsRPGMissionJournal;)
					</Action>

					<Action name="View Cargo Hold" key="V" >
						(block Nil
							(setq gDest Nil)
							(scrShowScreen gScreen &dsCargoHold;)
							)
					</Action>

					<Action name="Refuel Reactor" key="R" >
						(scrShowScreen gScreen &dsManualRefuel;)
					</Action>

					<Action name="Back to Cockpit" cancel="1" key="B">
						<Exit/>
					</Action>
				</Actions>
			</Default>
		</Panes>

	</DockScreen>

	<!-- Player ship configuration -->

	<DockScreen UNID="&dsShipConfig;"
			name=				"Ship's Configuration"
			desc=				"Ship Configuration"
			type=				"itemPicker"
			backgroundID=		"&rsItemListScreen;"
			>

		<ListOptions
			dataFrom=	"player"
			list=		"*I"
			/>

		<Panes>
			<Default
					desc=	"You are viewing the ship's configuration.">

				<OnPaneInit>
					(block (thisItem desc)
						(setq thisItem (scrGetItem gScreen))

						(if thisItem
							(block (theCategory)
								(setq desc (cat "Unit mass: " (strMassString (itmGetMass thisItem)) "\n\n"))

								; Describe the item installation
								(setq desc (cat desc (objGetInstalledItemDesc gPlayerShip thisItem) "."))
								
								; Display
								(scrSetDesc gScreen desc)
								)
							)
						)
				</OnPaneInit>

				<Actions>
					<Action name="Done" cancel="1" key="D">
						<Navigate screen="&dsShipInterior;"/>
					</Action>

				</Actions>

			</Default>
		</Panes>

	</DockScreen>

	<!-- Player ship's cargo hold -->

	<DockScreen UNID="&dsCargoHold;"
			name=				"Ship's Cargo Hold"
			desc=				"Interior of Ship"
			type=				"itemPicker"
			backgroundID=		"&rsItemListScreen;"
			>

		<ListOptions
			dataFrom=	"player"
			list=		"*U"
			/>

		<Panes>
			<Default
					desc=	"You are in your ship's cargo hold.">

				<OnPaneInit>
					(block (thisItem desc)
						(setq thisItem (scrGetItem gScreen))
						(switch
							(not thisItem)
								(setq gMaxCount 0)

							(itmIsInstalled thisItem)
								(setq gMaxCount 0)

							(setq gMaxCount (itmGetCount thisItem))
							)

						(if thisItem
							(block Nil
								(setq desc (cat "Unit mass: " (strMassString (itmGetMass thisItem))))
								(if (gr gMaxCount 1)
									(setq desc (cat desc " (" gMaxCount " at " (strMassString (multiply (itmGetMass thisItem) gMaxCount)) ")"))
									)
								(scrSetDesc gScreen desc)
								)
							)

						; Enable/disable actions
						(scrEnableAction gScreen 0 (gr gMaxCount 0))
						)
				</OnPaneInit>

				<Actions>
					<Action name="Jettison this Item" key="J" >
						(switch
							(gr gMaxCount 1)
								(scrShowPane gScreen "JettisonQuantity")

							(eq gMaxCount 1)
								(block (itemsToJettison)
									; Create cargo crate
									(if (not gDest)
										(setq gDest (sysCreateStation &stCargoCrate; (sysVectorPolarOffset gPlayerShip 0 0)))
										)

									; Dump items
									(setq itemsToJettison (scrRemoveItem gScreen 1))
									(intJettisonItem gDest itemsToJettison)
									(scrShowPane gScreen "Default")
									)
							)
					</Action>

					<Action name="Done" cancel="1" key="D">
						<Navigate screen="&dsShipInterior;"/>
					</Action>

				</Actions>

			</Default>

			<JettisonQuantity
					showCounter=	"true">

				<OnPaneInit>
					(block Nil
						(scrSetDesc gScreen (cat "How many items do you wish to jettison?"))
						(scrSetCounter gScreen gMaxCount)
						)
				</OnPaneInit>

				<Actions>
					<Action name="Jettison" default="1" key="J">
						(block (count)
							(setq count (scrGetCounter gScreen))
							(if (gr count gMaxCount)
								(scrSetCounter gScreen gMaxCount)
								(block (itemsToJettison)
									; Create cargo crate
									(if (not gDest)
										(setq gDest (sysCreateStation &stCargoCrate; (sysVectorPolarOffset gPlayerShip 0 0)))
										)

									; Dump items
									(setq itemsToJettison (scrRemoveItem gScreen count))
									(intJettisonItem gDest itemsToJettison)
									(scrShowPane gScreen "Default")
									)
								)
							)
					</Action>

					<Action name="Cancel" cancel="1" key="C">
						<ShowPane pane="Default"/>
					</Action>

				</Actions>

			</JettisonQuantity>
		</Panes>

	</DockScreen>

	<!-- Refuel ship screen -->

	<DockScreen UNID="&dsManualRefuel;"
			name=				"Ship's Cargo Hold"
			type=				"itemPicker"
			backgroundID=		"&rsItemListScreen;"
			>

		<ListOptions
			dataFrom=	"player"
			list=		"f"
			/>

		<Panes>
			<Default
					desc=	"Pick an item to use as fuel.">

				<OnPaneInit>
					(block (thisItem curEngine)
						(setq thisItem (scrGetItem gScreen))
						(setq gMaxCount 0)
						(switch
							(not thisItem)
								(scrSetDesc gScreen "You do not have any items that can be used as fuel.")

							(not (shpIsFuelCompatible gPlayerShip thisItem))
								(scrSetDesc gScreen "You cannot use this kind of fuel in your ship's reactor.")

							(setq gMaxCount (itmGetCount thisItem))
							)

						; Enable/disable actions
						(scrEnableAction gScreen 0 (gr gMaxCount 0))
						)
				</OnPaneInit>

				<Actions>
					<Action name="Refuel" default="1" key="R">
						(block Nil
							; No need to show help about refueling
							(plyEnableMessage gPlayer 'refuelHint Nil)

							; Handle refuel
							(switch
								; If this item requires confirmation, show pane
								(itmHasModifier (scrGetItem gScreen) 'ConfirmRefuel)
									(scrShowPane gScreen "ConfirmRefuel")

								; If there are more than one item, get count
								(gr gMaxCount 1)
									(scrShowPane gScreen "RefuelQuantity")

								(eq gMaxCount 0)
									Nil

								; Refuel from a single item
								(block (itemsToUse)
									(setq itemsToUse (scrRemoveItem gScreen 1))

									(plyRedirectMessage gPlayer True)
									(shpRefuelFromItem gPlayerShip itemsToUse)
									(plyRedirectMessage gPlayer Nil)

									(if (plyGetRedirectMessage gPlayer)
										(scrShowPane gScreen "RefuelMessage")
										(scrShowScreen gScreen "&dsShipInterior;")
										)
									)
								)
							)
					</Action>

					<Action name="Cancel" cancel="1" key="C">
						<Navigate screen="&dsShipInterior;"/>
					</Action>

				</Actions>

			</Default>

			<ConfirmRefuel>
				<OnPaneInit>
					(scrSetDesc gScreen 
						(cat "Are you sure you want to use " 
							(itmGetName (scrGetItem gScreen) 0x04)
							" for fuel?"
							)
						)
				</OnPaneInit>

				<Actions>
					<Action name="Yes" key="Y">
						(switch
							(gr gMaxCount 1)
								(scrShowPane gScreen "RefuelQuantity")

							(eq gMaxCount 0)
								(scrShowPane gScreen "Default")

							(block (itemsToUse)
								(setq itemsToUse (scrRemoveItem gScreen 1))

								(plyRedirectMessage gPlayer True)
								(shpRefuelFromItem gPlayerShip itemsToUse)
								(plyRedirectMessage gPlayer Nil)

								(if (plyGetRedirectMessage gPlayer)
									(scrShowPane gScreen "RefuelMessage")
									(scrShowScreen gScreen "&dsShipInterior;")
									)
								)
							)
					</Action>

					<Action name="No" key="N" cancel="1">
						(scrShowPane gScreen "Default")
					</Action>
				</Actions>
			</ConfirmRefuel>

			<RefuelMessage>
				<OnPaneInit>
					(scrSetDesc gScreen (plyGetRedirectMessage gPlayer))
				</OnPaneInit>

				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						<Navigate screen="&dsShipInterior;"/>
					</Action>
				</Actions>
			</RefuelMessage>

			<RefuelQuantity
					showCounter=	"true">

				<OnPaneInit>
					(block (thisItem maxNeeded)
						(setq thisItem (scrGetItem gScreen))
						(setq maxNeeded (shpGetFuelNeeded gPlayerShip thisItem))
						(if (ls maxNeeded gMaxCount)
							(setq gMaxCount maxNeeded)
							)
						(scrSetDesc gScreen (cat "How many " (itmGetName thisItem 2) " do you wish to use?"))
						(scrSetCounter gScreen gMaxCount)
						)
				</OnPaneInit>

				<Actions>
					<Action name="Refuel" default="1" key="R">
						(block (count)
							(setq count (scrGetCounter gScreen))
							(if (gr count gMaxCount)
								(scrSetCounter gScreen gMaxCount)
								(block (itemsToUse)
									(setq itemsToUse (scrRemoveItem gScreen count))

									(plyRedirectMessage gPlayer True)
									(shpRefuelFromItem gPlayerShip itemsToUse)
									(plyRedirectMessage gPlayer Nil)

									(if (plyGetRedirectMessage gPlayer)
										(scrShowPane gScreen "RefuelMessage")
										(scrShowScreen gScreen "&dsShipInterior;")
										)
									)
								)
							)
					</Action>

					<Action name="Cancel" cancel="1" key="C">
						<Navigate screen="&dsShipInterior;"/>
					</Action>

				</Actions>

			</RefuelQuantity>

			<RefuelMessage>
				<OnPaneInit>
					(scrSetDesc gScreen (plyGetRedirectMessage gPlayer))
				</OnPaneInit>

				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						<Navigate screen="&dsShipInterior;"/>
					</Action>
				</Actions>
			</RefuelMessage>

		</Panes>

	</DockScreen>
	
<!-- MISSION JOURNAL ===========================================================

	This screen is designed to be opened from the Ship's interior screen. It
	show the list of active missions for the player.

-->

	<DockScreen UNID="&dsRPGMissionJournal;"
			type=				"customPicker"
			backgroundID=		"&rsItemListScreen;"
			nestedScreen=		"true"
			>

		<List
			rowHeight="32"
			>
			(block (missionList)

				; Make a list of active player missions entries. Each entry is a list
				; with the following elements:
				;
				; 0.	The name of the mission
				; 1.	Nil (this would normally be the icon)
				; 2.	Nil (this would normally be a short description)
				; 3.	The mission object
				; 4.	The time the mission was accepted

				(setq missionList (map (msnFind "a") theMission
					(list (msnGetProperty theMission 'name) Nil Nil theMission (msnGetProperty theMission 'acceptedOn))
					))

				; Now sort by accepted time (later first)

				(sort missionList 'descending 4)
				)
		</List>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (theEntry theMission)
						(setq theEntry (scrGetListEntry gScreen))
						(setq theMission (@ theEntry 3))

						(switch
							(not theEntry)
								(scrSetDesc gScreen "You have no missions to complete.")

							(scrSetDesc gScreen (msnGetProperty theMission 'summary))
							)
							
						(scrShowAction gScreen 0 (msnGetProperty theMission 'canBeDeleted))
						)
				</OnPaneInit>

				<Actions>
					<Action name="Remove Mission" key="R">
						(block (theEntry theMission)
							(setq theEntry (scrGetListEntry gScreen))
							(setq theMission (@ theEntry 3))
							
							(msnFailure theMission)
							(scrRefreshScreen gScreen)
							)
					</Action>
					
					<Action name="Done" key="D" default="1" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
		</Panes>
	</DockScreen>

</TranscendenceModule>
