<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- NEUROHACK SCREEN ==========================================================

	This screen allows the player to break into an AI.

	gData uses the following fields:

	nextScreen:			If specified, we navigate to the given screen when we're
						done. This may also be a list consisting of a screen and
						a pane.
-->
	<DockScreen unid="&dsNeurohack;"
			backgroundID=	"none"
			nestedScreen=	"true"
			>
			
		<Display>
			<OnDisplayInit>
				(if (not gNeurohackResult)
					(block Nil
						; Update sim
						(setq gNeurohackG (divide (subtract gNeurohackWillpower gNeurohackWillpowerMax) gNeurohackPotential))
						(setq gNeurohackWillpower (max 0 (subtract gNeurohackWillpower gNeurohackDamage)))
						(setq gNeurohackDamage (add gNeurohackDamage gNeurohackG gNeurohackViralLoad))
						(setq gNeurohackVirusLeft (max 0 (subtract gNeurohackVirusLeft gNeurohackViralLoad)))
						
						(if (gr gNeurohackWillpower gNeurohackWillpowerMax)
							(block Nil
								(setq gNeurohackWillpower gNeurohackWillpowerMax)
								(setq gNeurohackDamage 0)
								)
							)
						
						; Check end conditions
						(switch
							(and (leq gNeurohackWillpower 0) (leq gNeurohackDamage 10))
								(block Nil
									(setq gNeurohackResult 'success)
									(scrShowPane gScreen "Success")
									)
							
							(leq gNeurohackWillpower 0)
								(block Nil
									(setq gNeurohackResult 'failDamaged)
									(scrShowPane gScreen "Failure")
									)
									
							(leq gNeurohackVirusLeft 0)
								(block Nil
									(setq gNeurohackResult 'failVirusExpended)
									(setq gNeurohackViralLoad 0)
									(scrShowPane gScreen "Failure")
									)
							)
						)
					)
			</OnDisplayInit>
			
			<Neurohack left="36" right="-36" top="30" bottom="-30">
				(list gNeurohackWillpower gNeurohackDamage)
			</Neurohack>
			
			<Canvas left="36" right="-36" top="100" bottom="-100">
				(switch
					(not gNeurohackResult)
						(block (frameWidth)
							(setq frameWidth 528)
							
							; Draw the willpower bar
							
							(if (leq gNeurohackWillpower 2000)
								(block (barX barWidth theColor theAccColor)
									(setq barWidth (divide (multiply frameWidth gNeurohackWillpower) 2000))
									(setq barX (divide (subtract frameWidth barWidth) 2))
									
									(switch
										(leq gNeurohackDamage 10)
											(setq theColor 0)
											
										(setq theColor 70)
										)

									(cnvDrawImage (subtract barX 70) 65 (list &rsNeurohackControls; 210 theColor 70 70))
									(cnvDrawImage (add barX barWidth) 65 (list &rsNeurohackControls; 70 theColor 70 70))
									)
								)
							
							; Draw the acceleration signals

							(if (not (eq gNeurohackDamage 0))
								(block (controlX)
									(setq controlX (divide (subtract frameWidth 70) 2))
									
									(if (and (eq (abs gNeurohackG) gNeurohackViralLoad) (leq gNeurohackDamage 10))
										(setq theAccColor 0)
										(setq theAccColor 70)
										)
									
									(if (geq (abs gNeurohackG) gNeurohackViralLoad)
										(cnvDrawImage controlX 100 (list &rsNeurohackControls; 140 theAccColor 70 70))
										)
										
									(if (leq (abs gNeurohackG) gNeurohackViralLoad)
										(cnvDrawImage controlX 30 (list &rsNeurohackControls; 0 theAccColor 70 70))
										)
									)
								)
							)

					(eq gNeurohackResult 'success)
						(block Nil
							(cnvDrawRect 0 60 528 80 '(74 71 95))
							(cnvDrawText 264 80 "Neurohack Successful!" 'SubTitleBold '(54 176 72) 'center)
							)
						
					(eq gNeurohackResult 'failDamaged)
						(block Nil
							(cnvDrawRect 0 60 528 80 '(74 71 95))
							(cnvDrawText 264 80 "Connection Destroyed" 'SubTitleBold '(204 54 30) 'center)
							)
						
					(eq gNeurohackResult 'failVirusExpended)
						(block Nil
							(cnvDrawRect 0 60 528 80 '(74 71 95))
							(cnvDrawText 264 80 "Virus Depleted" 'SubTitleBold '(204 54 30) 'center)
							)
					)
			</Canvas>
			
			<Image left="6" right="-6" top="0" bottom="400" transparent="true">
				(resCreateImageDesc &rsNeurohackFrame; 0 0 588 400)
			</Image>

			<Text left="198" top="4" width="90" font="HeaderBold" color="255,255,255" align="right">
				gNeurohackWillpower
			</Text>
			
			<Text left="312" top="4" width="90" font="HeaderBold" color="255,255,255" align="left">
				(if (geq gNeurohackDamage 0) gNeurohackDamage "Repairing")
			</Text>
			
			<Text left="312" top="370" width="90" font="HeaderBold" color="255,255,255" align="left">
				gNeurohackViralLoad
			</Text>

			<Text left="198" top="370" width="90" font="HeaderBold" color="255,255,255" align="right">
				gNeurohackVirusLeft
			</Text>
		</Display>
		
		<Panes>
			<Default>
				<OnPaneInit>
					(block Nil
						(scrSetDesc gScreen
							"Increase viral load to cause neural damage and break down the AI's resistance.\n\n"
							"You will succeed if resistance is 0 and neural damage is 10 or less.\n\n"
							"You will fail if resistance is 0 and neural damage is greater than 10 or if you run out of virus."
							)
						)
				</OnPaneInit>
			
				<Actions>
					<Action name="Increase Virus" prevKey="1" key="I">
						(setq gNeurohackViralLoad (add gNeurohackViralLoad 1))
					</Action>
					
					<Action name="Decrease Virus" nextKey="1" key="D">
						(if (gr gNeurohackViralLoad 0)
							(setq gNeurohackViralLoad (subtract gNeurohackViralLoad 1))
							)
					</Action>
					
					<Action name="Help" key="H">
						(scrShowScreen gScreen &dsNeurohackHelp;)
					</Action>
					
					<Action name="Disconnect" cancel="1" key="n">
						(block Nil
							(setq gNeurohackResult 'failDisconnect)
	                        (scrExitScreen gScreen)

							(if (@ gData 'nextScreen)
								(scrShowScreen gScreen (@ gData 'nextScreen))
								)
							)
					</Action>
				</Actions>
			</Default>
			
			<Success>
				<OnPaneInit>
					(scrSetDesc gScreen 
						"The AI has been subdued!")
						)
				</OnPaneInit>
				
				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(block Nil
							(scrExitScreen gScreen)

							(if (@ gData 'nextScreen)
								(scrShowScreen gScreen (@ gData 'nextScreen))
								)
							)
					</Action>
				</Actions>
			</Success>

			<Failure>
				<OnPaneInit>
					(block Nil
						(switch
							(eq gNeurohackResult 'failDamaged)
								(scrSetDesc gScreen 
									"Neural damage was too high. The connection port has been destroyed."
									)
									
							(eq gNeurohackResult 'failVirusExpended)
								(scrSetDesc gScreen
									"No more cyber-virus available for this connection port."
									)
							)
							
						; If this was our last attempt, then we're done
						(scrEnableAction gScreen 0 (geq (neuGetCharges) 1))
						)
				</OnPaneInit>
				
				<Actions>
					<Action name="Try Again" default="1" key="T">
						(block Nil
							(setq gNeurohackWillpower gNeurohackWillpowerMax)
							(setq gNeurohackDamage 0)
							(setq gNeurohackViralLoad 0)
							(setq gNeurohackVirusLeft gNeurohackVirusMax)
							(setq gNeurohackResult Nil)
							
							(neuConsumeCharge)
							(scrShowPane gScreen "Default")
							)
					</Action>
					
					<Action name="Disconnect" cancel="1" key="D">
						(block Nil
							(scrExitScreen gScreen)

							(if (@ gData 'nextScreen)
								(scrShowScreen gScreen (@ gData 'nextScreen))
								)
							)
					</Action>
				</Actions>
			</Failure>
		</Panes>
	</DockScreen>
	
	<DockScreen unid="&dsNeurohackHelp;"
			backgroundID=	"none"
			nestedScreen=	"true"
			>
			
		<Display>
			<Canvas left="10" top="0" right="-10" bottom="-1">
				(block Nil
					(cnvDrawImage 120   0 (list &rsNeurohackControls;   0   0 70 70))
					(cnvDrawImage 120  70 (list &rsNeurohackControls; 140   0 70 70))
					(cnvDrawText 155 140 "Neural damage steady" 'Large '(255 255 255) 'center)
					(cnvDrawText 155 160 "(10 or less\x97acceptable level)" 'Large '(255 255 255) 'center)
					
					(cnvDrawImage 400   0 (list &rsNeurohackControls;   0  70 70 70))
					(cnvDrawImage 400  70 (list &rsNeurohackControls; 140  70 70 70))
					(cnvDrawText 435 140 "Neural damage steady" 'Large '(255 255 255) 'center)
					(cnvDrawText 435 160 "(greater than 10\x97unacceptable)" 'Large '(255 255 255) 'center)
					
					(cnvDrawImage 120 270 (list &rsNeurohackControls; 140  70 70 70))
					(cnvDrawText 155 340 "Neural damage decreasing" 'Large '(255 255 255) 'center)
					(cnvDrawText 155 360 "(increase viral load)" 'Large '(255 255 255) 'center)
					
					(cnvDrawImage 400 200 (list &rsNeurohackControls;   0  70 70 70))
					(cnvDrawText 435 340 "Neural damage increasing" 'Large '(255 255 255) 'center)
					(cnvDrawText 435 360 "(decrease viral load)" 'Large '(255 255 255) 'center)
					)
			</Canvas>
		</Display>
		
		<Panes>
			<Default>
				<OnPaneInit>
					(scrSetDesc gScreen
						"Increase viral load to cause neural damage and break down the AI's resistance.\n\n"
						"You will succeed if resistance is 0 and neural damage is 10 or less.\n\n"
						"You will fail if resistance is 0 and neural damage is greater than 10 or if you run out of virus."
						)
				</OnPaneInit>
				
				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
		</Panes>
	</DockScreen>

</TranscendenceModule>
