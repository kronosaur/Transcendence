<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- STATION TYPES -->

	<!-- Commonwealth Colony -->

	<StationType UNID="&stCommonwealthColony;"
			name=				"Commonwealth colony"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, friendly, generic, human, majorStation, primary, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsAbandonedStation;"

			level=				"4"
			size=				"390"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"320"
			multiHull=			"true"
			regen=              "6"
			shipRegen=			"4"
				 
			canAttack=			"true"
			fireRateAdj=		"80"
			explosionType=		"&vtBlastExplosion2;"
			ejectaType=			"&vtWreckEjecta;"
			>
		
		<!-- Encounter Info -->

		<Encounter
				levelFrequency=		"cuc-- ----- ----- ----- -----"
				locationCriteria=	"-outerSystem, +planetary"
				enemyExclusionRadius="50"
				/>

		<Names noArticle="true">
			Agricola Station; Britannia Station; Canterbury Station;
			Devonshire Colony; Enterprise Station; Farsend Station;
			Grenoble Colony; Hellas Station; Independence Station;
			Janus Colony; Koran Station; Lexington Colony; Massachusetts Colony;
			Nakura Colony; Ontario Station; Paduan Station; Qatar Station;
			Ryad Colony; Santiago Station; Tango Colony; Umber Station;
			Victory Colony; Winchell Station; %s Colony; %s Alpha Station;
			%s Beta Station; %s Gamma Station; %s Epsilon Station;
			Anacreon Colony %1%0%0%0; Anacreon Colony %1%0%0; Anacreon Colony %1%0%0;
			Anacreon Colony %1%0%0; Anacreon Colony %1%0%0
		</Names>
		
		<!-- Trade and Items -->

		<Trade currency="credit" max="50000" replenish="2500">
			<Sell	criteria="m +commonwealth; +basicAmmo; -illegal; -notForSale; -notStandard;" priceAdj="100" inventoryAdj="200" levelFrequency="systemLevel:ruc|c|cur"/>
			<Sell	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="amdNU -Illegal; -NotForSale;"		priceAdj="50"/>
			<Buy	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="90"/>
			<Buy	criteria="*NU -Illegal; -ID;"				priceAdj="10"/>
			
			<Refuel			criteria="f +BasicFuel; L:1-5;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-5;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-5;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-5;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-5;" priceAdj="100"/>

			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="2"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="5"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="3"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="2"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
			<ConsumeTrade	criteria="{core.ore}"			impact="2"/>
		</Trade>

		<Items>
			<RandomItem count="10" 
					criteria=		"ad L:1-5; -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:r|c|cur"
					/>
			<RandomItem count="10" 
					criteria=		"*~ad -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:ru|c|cur"
					/>
			<Item count="4d12"	item="&itHelium3FuelRod;" />
		</Items>
		
		<!-- Configuration -->
		
		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>
		
		<!-- Ships and Defenses -->

		<Ships>
			<Lookup count="2" table="&tbCommDefenders;"/>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>
		
		<!-- Image and Effects -->
		
		<Image imageID="&rsCommonwealthColony;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>
		
		<!-- Dock Screen -->

		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: (cat "n +commonwealthColony; =" (sysGetLevel) ";")
									noMissionTextID: 'descHallEmpty
									maxPerStation: 1
									})
							</Action>
					
							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange; {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionDockServices">
								(rpgDockServices gPlayerShip {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>
		
		<!-- Events and Data -->

		<StaticData>
			<NPCService>
				(	;	service					level	margin
					(	'repairArmor			5		100		)
					)
			</NPCService>
		</StaticData>

		<Events>
			<OnCreate>
				(sysAddObjRecurringTimerEvent 150 gSource "OnTrafficControl")
			</OnCreate>
			
			<OnContractGenerate>
				(intGenerateStandardRequestContract1)
			</OnContractGenerate>

			<OnContractQuery>True</OnContractQuery>

			<OnTrafficControl>
				(comTrafficControl gSource 10)
			</OnTrafficControl>
		</Events>
		
		<Language>
			<Text id="descWelcome">
				You are in the docking bay of a Commonwealth colony. Except for a few shuttles,
				the docking bay of this station is deserted. A loose hose spills dirty
				water onto the landing pad; elsewhere, an automatic load-lifter moves forward
				and back again as it unloads a ship's cargo hold. The air smells of liquid fuel
				and exhaust.
			</Text>
		</Language>
	</StationType>

	<!-- Commonwealth Turret -->

	<StationType UNID="&stCommonwealthTurret;"
			name=				"Commonwealth defense turret"
			sovereign=			"&svCommonwealth;"
			inherit=			"&dsDockScreenBase;"

			abandonedScreen=	"&dsAbandonedStation;"
			dockScreen=			"Main"
			noMapLabel=			"true"
			noFriendlyFire=		"true"
			canAttack=			"true"

			mass=				"2000"
			armorID=			"&itP120HexphaseArmor;"
			hitPoints=			"100"
			structuralHitPoints="20"
			fireRateAdj=		"40"
			ejectaType=			"&vtWreckEjecta;"
			>

		<ImageVariants>
			<Image			imageID="&rsStations4;" imageX="96" imageY="320" imageWidth="32" imageHeight="32"/>
			<Image			imageID="&rsStations4;" imageX="96" imageY="352" imageWidth="32" imageHeight="32"/>
			<Image			imageID="&rsStations4;" imageX="96" imageY="384" imageWidth="32" imageHeight="32"/>
			<Image			imageID="&rsStations4;" imageX="96" imageY="416" imageWidth="32" imageHeight="32"/>
		</ImageVariants>

		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>

		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<DockingPorts
				portCount=		"2"
				portRadius=		"24"
				maxDist=		"3"
				/>

		<Language>
			<Text id="descWelcome">
				You are docked at a Commonwealth Defense Turret. These armed and armored
				turrets are used to defend Commonwealth stations and settlements in the
				Ungoverned Territories beyond St. Katharine's Star.
			</Text>
		</Language>
	</StationType>

	<!-- Commonwealth Colony, Armed -->

	<StationType UNID="&stCommonwealthColonyArmed;"
			name=				"armed Commonwealth colony"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, fleetDelivery, friendly, generic, human, majorStation, primary, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsAbandonedStation;"

			size=				"390"
			armorID=			"&itP120HexphaseArmor;"
			hitPoints=			"560"
			multiHull=			"true"
			regen=              "10"
			shipRegen=			"6"
				 
			canAttack=			"true"
			explosionType=		"&vtBlastExplosion3;"
			ejectaType=			"&vtWreckEjecta;"
			fireRateAdj=		"40"
			>

		<Names noArticle="true">Anvil Station; Brimstone Station; Cerberus Station;
				Demesne Colony; Exile Station; Farsend Station;
				Greenspace Colony; Hellas Station; Independence Station;
				Jotur Colony; C%1%0 Outpost; Lethe Colony; Mars Colony;
				Nebulon Colony; Oort Station; Purgatory Station; Quequeg Station;
				Rend Colony; Sangre Station; Tantalus Colony; Umber Station;
				Vindication Colony; Wight Station; %s Colony; %s Alpha Station;
				%s Beta Station; %s Gamma Station; %s Epsilon Station</Names>

		<!-- Encounter Info -->

		<Encounter
				levelFrequency=		"---uu cu--- ----- ----- -----"
				locationCriteria=	"+planetary"
				enemyExclusionRadius="60"
				/>

		<!-- Trade and Items -->

		<Trade currency="credit" max="50000" replenish="2500">
			<Sell	criteria="m +commonwealth; -premiumAmmo; -illegal; -notForSale; -notStandard;" priceAdj="100" inventoryAdj="200" levelFrequency="systemLevel:ruc|c|cur"/>
			<Sell	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="amdNU -Illegal; -NotForSale;"		priceAdj="50"/>
			<Buy	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="90"/>
			<Buy	criteria="*NU -Illegal; -ID;"				priceAdj="10"/>
			
			<Refuel			criteria="f +BasicFuel; L:1-7;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-7;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-7;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-7;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-7;" priceAdj="100"/>

			<ConsumeTrade	criteria="{core.antimatterFuel}"	impact="2"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="5"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="3"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="2"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
			<ConsumeTrade	criteria="{core.ore}"			impact="2"/>
		</Trade>

		<Items>
			<RandomItem	count="10" 
					criteria=		"ad L:1-7; -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:r|c|cur"
					/>
			<RandomItem count="10" 
					criteria=		"*~ad -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:ru|c|cur"
					/>
			<Item count="4d12"	item="&itXenotiteFuelRod;" />
		</Items>

		<!-- Configuration -->
		
		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>

		<!-- Satellites -->
		
		<Satellites overlapCheck="asteroids">
			<Orbitals distance="12" angle="45">
				<Station type="&stCommonwealthTurret;" imageVariant="2"/>
			</Orbitals>

			<Orbitals distance="12" angle="135">
				<Station type="&stCommonwealthTurret;" imageVariant="1"/>
			</Orbitals>

			<Orbitals distance="12" angle="225">
				<Station type="&stCommonwealthTurret;" imageVariant="0"/>
			</Orbitals>

			<Orbitals distance="12" angle="315">
				<Station type="&stCommonwealthTurret;" imageVariant="3"/>
			</Orbitals>
		</Satellites>
		
		<!-- Ships and Defenses -->
		
		<Ships>
			<Lookup count="2" table="&tbCommDefenders;"/>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>

		<!-- Image and Effects -->
		
		<Image imageID="&rsCommonwealthArmoredColony;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>
		
		<!-- Dock Screens -->
		
		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: (cat "n +commonwealthColonyArmed; =" (sysGetLevel) ";")
									noMissionTextID: 'descHallEmpty
									maxPerStation: 1
									})
							</Action>
					
							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange; {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionDockServices">
								(rpgDockServices gPlayerShip {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>

		</DockScreens>
		
		<!-- Events and Data -->

		<StaticData>
			<NPCService>
				(	;	service					level	margin
					(	'repairArmor			7		100		)
					)
			</NPCService>
		</StaticData>

		<Events>
			<OnCreate>
				(sysAddObjRecurringTimerEvent 150 gSource "OnTrafficControl")
			</OnCreate>

			<OnContractGenerate>
				(intGenerateStandardRequestContract1)
			</OnContractGenerate>

			<OnContractQuery>True</OnContractQuery>

			<OnTrafficControl>
				(comTrafficControl gSource 10)
			</OnTrafficControl>
		</Events>
		
		<Language>
			<Text id="descWelcome">
				You are in the docking bay of a Commonwealth colony. Except for a few shuttles,
				the docking bay of this station is deserted. A loose hose spills dirty
				water onto the landing pad; elsewhere, an automatic load-lifter moves forward
				and back again as it unloads a ship's cargo hold. The air smells of liquid fuel
				and exhaust.
			</Text>
		</Language>
	</StationType>

	<!-- Commonwealth Dry Dock -->

	<StationType UNID="&stCommonwealthDryDock;"
			name=				"Commonwealth dry dock"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, fleetDelivery, friendly, generic, human, majorStation, populated"

			dockScreen=			"Main"
			abandonedScreen=	"&dsAbandonedStation;"

			level=				"5"
			size=				"511"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"800"
			multiHull=			"true"
			regen=              "8"
			shipRegen=			"8"

			canAttack=			"true"
			explosionType=		"&vtBlastExplosion3;"
			ejectaType=			"&vtWreckEjecta;"
			>

		<!-- Encounter Info -->

		<Encounter
				levelFrequency=		"uucuu r---- ----- ----- -----"
				locationCriteria=	"+planetary"
				unique=				"inSystem"
				enemyExclusionRadius="75"
				/>

		<!-- Trade and Items -->

		<Trade currency="credit" max="50000" replenish="2500">
			<Sell	criteria="m +commonwealth; +basicAmmo; -illegal; -notForSale; -notStandard;" priceAdj="100" inventoryAdj="200" levelFrequency="systemLevel:ruc|c|cur"/>
			<Sell	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="amdNU -Illegal; -NotForSale;"		priceAdj="50"/>
			<Buy	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="90"/>
			<Buy	criteria="*NU -Illegal; -ID;"				priceAdj="10"/>
			
			<Refuel			criteria="f +BasicFuel; L:1-7;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-8;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-8;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-7;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-7;" priceAdj="100"/>

			<SellShip		criteria="s -notForSale;" priceAdj="100"/>
			<BuyShip		criteria="s L:1-10; -notForSale;" priceAdj="80"/>

			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="3"/>
		</Trade>
		
		<Items>
			<RandomItem count="1d10" 
				criteria=		"a L:1-8; -alien; -illegal; -military; -notForSale; -notStandard; -specialty;"
				levelFrequency=	"systemLevel:r|c|cur"
				/>
			<RandomItem count="1d10" 
				criteria=		"scv L:1-7; -alien; -illegal; -military; -notForSale; -notStandard; -specialty;"
				levelFrequency=	"systemLevel:r|c|cur"
				/>
			<RandomItem count="1d6" 
				criteria=		"r -illegal; -military; -notForSale; -notStandard; L:3-7;"
				levelFrequency=	"systemLevel:ru|c|curv"
				/>
			<RandomItem count="1d10" 
				criteria=		"d~scvr L:1-7; -alien; -illegal; -military; -notForSale; -notStandard; -specialty;"
				levelFrequency=	"systemLevel:r|c|cur"
				/>
			<RandomItem count="1d8"
				criteria=		"u +armorRepair; -illegal; -military; -notForSale; -notStandard;"
				levelFrequency=	"systemLevel:ru|c|curv"
				/>
		</Items>

		<!-- Ships and Defenses -->

		<Ships>
			<Lookup count="1d3" table="&tbCommDefenders;"/>
			<Lookup count="1d2" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>

		<!-- Image and Effects -->

		<Image			imageID="&rsCommonwealthDryDock;" imageWidth="360" imageHeight="360" viewportRatio="0.065"/>

		<DockingPorts
				portCount="8"
				portRadius="205"
				portAngle="15"
				/>

		<!-- Dock Screens -->

		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionBuyShip">
								(scrShowScreen gScreen &dsRPGShipBroker; {
									createCriteria: "s +systemLevel:0-2; +commonwealth; -military; -notStandard; +shipBroker;"
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange; {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionDockServices" default="1">
								(rpgDockServices gPlayerShip {
									checkMilitaryID: True
									})
							</Action>
					
							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<!-- Behavior & Language -->

		<StaticData>
			<NPCService>
				(	;	service					level	margin
					(	'repairArmor			8		100		)
					)
			</NPCService>
		</StaticData>

		<Events>
			<OnContractGenerate>
				(intGenerateIndustrialRequestContract1)
			</OnContractGenerate>

			<OnContractQuery>True</OnContractQuery>
		</Events>

		<Language>
			<Text id="descWelcome">Your ship is in dry dock.</Text>
		</Language>

	</StationType>

	<!-- Commonwealth Medical Suburb -->

	<StationType UNID="&stMedicalSuburb;"
			name=				"Commonwealth medical colony"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, friendly, generic, human, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsAbandonedStation;"

			level=				"4"
			size=				"390"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"320"
			multiHull=			"true"
			regen=              "4"
			shipRegen=			"1"
				 
			canAttack=			"true"
			fireRateAdj=		"80"
			explosionType=		"&vtBlastExplosion2;"
			ejectaType=			"&vtWreckEjecta;"
			>

		<!-- Encounter Info -->

		<Encounter
				levelFrequency=		"uuurr ----- ----- ----- -----"
				locationCriteria=	"-outerSystem, +planetary"
				unique=				"inSystem"
				enemyExclusionRadius="50"
				/>

		<Names noArticle="true">
			Asclepius Station; Barnard Station; Station Charity; 
			Crick Station; Drew Station; Station Empathy; Freud Complex;
			Station Grace; Haeckel Station; Imhotep Station;
			Jung Center; Koch Station; Leeuwenhoek Station;
			Morton Station; Nicolle Station; Osler Station;
			Penfield Station; Station Respite; Salk Station;
			Taussig Station; Urbani Station; Virchow Station;
			Watson Station; Yegerov Station; Zygote Station;
			Cyteen Station; NeuroSci Station; Biogen Station;
			Pharmaton %s; Medecin d'Etoile Station
		</Names>

		<!-- Trade and Items -->
		
		<Trade currency="credit" max="50000" replenish="2500">
			<Sell	criteria="*NU +Meds; -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="*NU +Food; -Illegal;"	priceAdj="100"/>
			<Buy	criteria="*NU +Lux; -Illegal;"	priceAdj="100"/>

			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="2"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="3"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="5"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>

			<ProduceTrade	criteria="{human.meds}"		impact="20"/>
		</Trade>

		<Items>
			<RandomItem count="10-20" 
					criteria=		"* +Meds; -Illegal; -Military; -Alien; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:ru|c|cur"
					/>
		</Items>

		<!-- Configuration -->
		
		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>

		<!-- Ships and Defenses -->
		
		<Ships>
			<Lookup count="2" table="&tbCommDefenders;"/>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>

		<!-- Image and Effects -->

		<Image imageID="&rsCommonwealthMedicalColony;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>

		<!-- Dock Screens -->
		
		<DockScreens>
			<Main>
				<Panes>
					<Default>
						<OnPaneInit>
							(scrSetDescTranslate gScreen 'descWelcome {objName: (objGetName gSource)})
						</OnPaneInit>

						<Actions>
							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange; {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>
		
		<!-- Events and Data -->
		
		<Events>
			<OnContractGenerate>
				(intGenerateStandardRequestContract1)
			</OnContractGenerate>

			<OnContractQuery>True</OnContractQuery>
		</Events>

        <Language>
			<Text id="descWelcome">
				You are in the docking bay of %objName%. Medical professionals
				live and work on this station, doing everything from research,
				to drug manufacturing, to remote medicine.
			</Text>

            <Text id="core.mapDesc">"Sells meds &mdash; Buys food and luxuries"</Text>
        </Language>
	</StationType>

	<!-- Commonwealth Residentials -->

	<StationType UNID="&stCommonwealthResidentials;"
			name=				": Commonwealth residentials|Commonwealth residentials"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, friendly, generic, human, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsAbandonedStation;"

			level=				"4"
			size=				"390"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"320"
			multiHull=			"true"
			regen=              "6"
				 
			canAttack=			"true"
			explosionType=		"&vtBlastExplosion2;"
			ejectaType=			"&vtWreckEjecta;"
			>

		<!-- Trade and Items -->

		<Trade currency="credit" max="50000" replenish="2500">
			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="1"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="5"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="2"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="5"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
		</Trade>
		
		<!-- Ships and Defenses -->

		<Ships>
			<Lookup table="&tbCommDefenders;"/>
			<Lookup count="1d4+1" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<!-- Image and Effects -->
		
		<Image imageID="&rsCommonwealthResidentials;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>
		
		<!-- Dock Screens -->
		
		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<!-- Events and Data -->
		
		<Events>
			<OnContractGenerate>
				(intGenerateStandardRequestContract1)
			</OnContractGenerate>

			<OnContractQuery>True</OnContractQuery>
		</Events>

		<Language>
			<Text id="descWelcome">
				Welcome to Commonwealth Residentials.
			</Text>
		</Language>
	</StationType>
	
	<!-- Commonwealth Slums

	GLOBAL DATA

	lastMissionTime:	Tick on which mission was given to player (Nil if never)
	totalMissionCount:	Total number of missions that the player has requested

	-->

	<StationType UNID="&stCommonwealthSlums;"
			name=				"Commonwealth habitat"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsAbandonedStation;"
			canAttack=			"true"

			level=				"3"
			multiHull=			"true"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"150"
			regen=              "1"
			ejectaType=			"&vtWreckEjecta;"

			attributes=			"commonwealth, commonwealthCustoms, friendly, generic, human, populated"
			>

		<Names noArticle="true">Habitat Alpha %1%0; Habitat Beta %1%0; Habitat Gamma %1%0; Habitat Delta %1%0;
				Habitat Epsilon %1%0; Habitat Zeta %1%0</Names>

		<Trade>
			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="1"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="2"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="2"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
		</Trade>

		<ImageVariants>
			<Image	imageID="&rsCommonwealthSlumsImage;" imageX="0" imageY="0" imageWidth="64" imageHeight="128"/>
			<Image	imageID="&rsCommonwealthSlumsImage;" imageX="64" imageY="0" imageWidth="64" imageHeight="128"/>
			<Image	imageID="&rsCommonwealthSlumsImage;" imageX="128" imageY="0" imageWidth="64" imageHeight="128"/>
			<Image	imageID="&rsCommonwealthSlumsImage;" imageX="192" imageY="0" imageWidth="64" imageHeight="128"/>
		</ImageVariants>

		<Ships>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Events>
			<GetGlobalAchievements>
				(rpgMissionAchievements &stCommonwealthSlums; "* +commonwealthHabitat;")
			</GetGlobalAchievements>

			<OnContractGenerate>
				(intGenerateStandardRequestContract1)
			</OnContractGenerate>

			<OnContractQuery>True</OnContractQuery>

			<GetGlobalRumors>
				(append
					(rpgRumorAdd 'commonwealthHabitat (make 'sequence 4))

					(if (= (objGetProperty gPlayerShip 'characterClass) &unidPilgrimClass;)
						(rpgRumorAdd 'commonwealthHabitat 'pilgrim)
						(rpgRumorAdd 'commonwealthHabitat 'freelancer)
						)

					(rpgRumorAdd 'commonwealthHabitat
						(switch
							(= (objGetType gPlayerShip) &scSapphirePlayer;)	'sapphire
							(= (objGetType gPlayerShip) &scEI100XPlayer;)	'ei100x
							(= (objGetType gPlayerShip) &scWolfenPlayer;)	'wolfen
																			'other
							)
						Nil
						Nil
						{	shipName: (objGetName gPlayerShip)	}
						)
					)
			</GetGlobalRumors>
		</Events>

		<DockScreens>
			<Main>
				<Panes>
					<Default>
						<OnPaneInit>
							(scrSetDescTranslate gScreen 'descWelcome {objName: (objGetName gSource)})
						</OnPaneInit>

						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: "n +commonwealthHabitat;"
									maxActive: 1
									intervalPerType: (+ 5400 (* (objGetDestiny gSource) 10))
									noMissionTextID: 'descNoMissions
									})
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<DockingPorts>
			<Port x="0"		y="80" />
			<Port x="43"	y="56" />
			<Port x="52"	y="8" />
			<Port x="35"	y="-44" />
			<Port x="-35"	y="-44" />
			
			<Port x="-52"	y="8" />
			<Port x="-43"	y="56" />
		</DockingPorts>

        <Language>
			<Text id="descWelcome">

				The loud voices of a packed multitude bounce off every bulkhead and
				corridor in the station. Old air scrubbers pump a thin, odorous
				breeze out of rusty vents. Discarded packets of Salmonite and Red
				Nebula beer huddle in the corner.

				Welcome to %objName%!

			</Text>
			<Text id="descNoMissions">

				The colony supervisor is working at his station. The comms channels
				are quiet and he stops to chat:

				"It's calm now, but I've been hearing a lot of military chatter lately."

			</Text>
			<Text id="rpg.missionTypeDesc">Commonwealth habitat missions</Text>

			<Text id="rumor.intro">
				The station master is working at his console. He stops to chat:\n\n
			</Text>
			<String id="rumor.commonwealthHabitat.1">
				"You got a pretty nice ship there. Did your mom and dad buy it for you?"
			</String>
			<Text id="rumor.commonwealthHabitat.2">
				"Truth is, you gotta approach life philosophically, you know what I mean?
				You gotta believe that it's all going to work out in the end, or else
				what's the point?"
			</Text>
			<Text id="rumor.commonwealthHabitat.3">
				"Nobody cares. Station needs a carbon scrubber? Get on the waiting list!
				After the corporate suits get their grilled Icelandic salmon, then they
				might pay attention to you. Nobody cares."
			</Text>
			<Text id="rumor.commonwealthHabitat.4">
				"A station is not like a starship. If you get into trouble you can always
				run away. All we can do is sit tight and repair the damage. Takes a
				special kind of man to live like that."
			</Text>
			<Text id="rumor.commonwealthHabitat.pilgrim">
				"I don't know what you're doing in this backwater system. You wanna get
				to the Core? Go! What's stopping you? Kids today: they dream big, but
				they'd rather watch the 3DVs."
			</Text>
			<Text id="rumor.commonwealthHabitat.freelancer">
				"I don't know what you're doing in this backwater system. You wanna see
				the galaxy? Go! What's stopping you? Kids today: they dream big, but
				they'd rather watch the 3DVs."
			</Text>
			<Text id="rumor.commonwealthHabitat.sapphire">
				"How do you like your %shipName%? My daughter's friend had one once.
				It was beautiful, but not very practical for long voyages."
			</Text>
			<Text id="rumor.commonwealthHabitat.ei100x">
				"How do you like your %shipName%? My son pilots an older 200-series	in the
				Cairn system. He's got it up-armored with polyceramic to protect against
				pirate attacks."
			</Text>
			<Text id="rumor.commonwealthHabitat.wolfen">
				"How do you like your %shipName%? I knew this guy John Tremaine who flew
				one in the Militia. They're fast as hell on a whip, but a little flimsy.
				Hope you've got some good shields on her."
			</Text>
			<Text id="rumor.commonwealthHabitat.other">
				"How do you like your %shipName%? I haven't seen a lot of ships like that.
				Is it hard to get parts for it?"
			</Text>
        </Language>
	</StationType>

	<!-- Container Habitat

	GLOBAL DATA

	donationPoints:		Donation points earned

	-->

	<StationType UNID="&stContainerHabitat;"
			name=				"container habitat"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsAbandonedStation;"
			canAttack=			"true"

			level=				"4"
			multiHull=			"true"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"160"
			regen=              "1"
			ejectaType=			"&vtWreckEjecta;"

			attributes=			"commonwealth, friendly, generic, human, populated"
			levelFrequency=		"uur-- ----- ----- ----- -----"
			locationCriteria=	"-planetary"
			>

		<ImageVariants>
			<Image	imageID="&rsCommonwealthSlumsImage;" imageX="0" imageY="128" imageWidth="64" imageHeight="64"/>
			<Image	imageID="&rsCommonwealthSlumsImage;" imageX="64" imageY="128" imageWidth="64" imageHeight="64"/>
			<Image	imageID="&rsCommonwealthSlumsImage;" imageX="128" imageY="128" imageWidth="64" imageHeight="64"/>
			<Image	imageID="&rsCommonwealthSlumsImage;" imageX="192" imageY="128" imageWidth="64" imageHeight="64"/>
		</ImageVariants>

		<Ships>
			<Lookup count="1d2-1" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Trade currency="credit" max="50000" replenish="2500">
			<AcceptDonation	criteria="* -ID; -questItem;" priceAdj="100"/>

			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="1"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="1"/>
			<ConsumeTrade	criteria="{core.ore}"			impact="1"/>
		</Trade>

		<StaticData>
			<DonationTable>
				; donate =	If -1, gain 1 donation point per item donated
				;			If 0, gain no donation points
				;			If greater than 0, this is the credit value to gain 1 donation point

				(	; pattern						donate	result
					("* +meds;"						50		'info)
					("* +illegal; +consumerGood"	250		'info)
					("* +lux;"						100		'info)
					("* +food;"						50		'info)
					("f"							50		'info)
					(Nil							0		'thanksForNothing)
					)
			</DonationTable>
		</StaticData>

		<Events>
			<OnContractGenerate>
				(intGenerateStandardRequestContract1)
			</OnContractGenerate>

			<OnContractQuery>True</OnContractQuery>

			<OnObjDestroyed>
				(if (eq aObjDestroyed (objGetObjRefData gSource "target"))
					(block Nil
						(shpCancelOrders gPlayerShip)
						(objUnregisterForEvents gSource aObjDestroyed)
						(objSetData gSource "missionID" Nil)
						)
					)
			</OnObjDestroyed>

			<OnObjDocked>
				(if (eq aDockTarget (objGetObjRefData gSource "target"))
					(block Nil
						(shpCancelOrders gPlayerShip)
						(objUnregisterForEvents gSource gPlayerShip)
						(objSetData gSource "missionID" Nil)
						)
					)
			</OnObjDocked>

			<OrderDestroyTarget>
				; aTargetObj = object to destroy
				
				(block Nil
					; Clean up in case we have a previous mission
					(if (eq (objGetData gSource "missionID") 'dockWithTarget)
						(objUnregisterForEvents gSource gPlayerShip)
						)

					(objSetData gSource "missionID" 'destroyTarget)
					(objSetObjRefData gSource "target" aTargetObj)
					(objRegisterForEvents gSource aTargetObj)

					(shpCancelOrders gPlayerShip)
					(shpOrder gPlayerShip 'attack aTargetObj)
					)
			</OrderDestroyTarget>

			<OrderDockWithTarget>
				(block Nil
					; Clean up in case we have a previous mission
					(if (eq (objGetData gSource "missionID") 'destroyTarget)
						(objUnregisterForEvents gSource (objGetObjRefData gSource "target"))
						)

					(objSetData gSource "missionID" 'dockWithTarget)
					(objSetObjRefData gSource "target" aTargetObj)
					(objRegisterForEvents gSource gPlayerShip)

					(shpCancelOrders gPlayerShip)
					(shpOrder gPlayerShip 'dock aTargetObj)
					)
			</OrderDockWithTarget>

			<GetGlobalRumors>
				(rpgRumorAdd 'commonwealthContainer (make 'sequence 6))
			</GetGlobalRumors>
		</Events>

		<DockScreens>
			<Main>
				<Panes>
					<Default>
						<OnPaneInit>
							(switch
								(eq (objGetProperty gPlayerShip 'characterClass) &unidPilgrimClass;)
									(scrSetDescTranslate gScreen 'descWelcomePilgrim)
									
								(scrSetDescTranslate gScreen 'descWelcome)
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionDonate" default="1">
								(scrShowScreen gScreen "&dsContainerHabitatDonateItem;")
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<DockingPorts>
			<Port x="0"		y="70" />
			<Port x="61"	y="35" />
			<Port x="61"	y="-35" />
			<Port x="0"		y="-70" />
			<Port x="-61"	y="-35" />
			
			<Port x="-61"	y="35" />
		</DockingPorts>
		
		<Language>
			<Text id="actionDonate">[D]onate Item</Text>

			<Text id="descWelcome">
				You are docked at a habitat made out of shipping containers. Children
				bounce off the bulkheads in zero-G while maintenance workers repair
				leaky seals and balky machinery. The station master approaches you:

				"Traveling the universe, yeah? Why don't you spare some items for us!"
			</Text>
			<Text id="descWelcomePilgrim">
				You are docked at a habitat made out of shipping containers. Children
				bounce off the bulkheads in zero-G while maintenance workers repair
				leaky seals and balky machinery. The station master approaches you:

				"We don't get many pilgrims visiting around here. Why don't you give
				us some of your worldly possessions; they won't do you much good at
				the Core, or wherever you're trying to get."
			</Text>
			<String id="descNoRumors">
				"Everything's quiet around here at the moment."
			</String>

			<Text id="rumor.intro">
				The station master grabs you and speaks softly in your ear:\n\n
			</Text>
			<Text id="rumor.commonwealthContainer.1">
				"The Charon pirates are a menace. They have bases in almost every
				system and they prey on defenseless freighters."
			</Text>
			<Text id="rumor.commonwealthContainer.2">
				"If you need a contact in the Black Market find the Aleksany
				brothers; they're always doing business in some fancy hotel."
			</Text>
			<Text id="rumor.commonwealthContainer.3">
				"The anarchists don't bother us, but they really annoy the
				Corporations: they're always stealing their fancy ROMs."
			</Text>
			<Text id="rumor.commonwealthContainer.4">
				"Stay away from the Abbasid fortresses. Those fanatics will
				shoot you rather than let you get close."
			</Text>
			<Text id="rumor.commonwealthContainer.5">
				"The Urak warlords are another nutty group, but their armor
				and weapons are pretty good."
			</Text>
			<Text id="rumor.commonwealthContainer.6">
				"Hiro is the best hacker in the 'verse. He's created some
				fancy ROMs that even the cyber corporations can't figure out."
			</Text>
		</Language>
	</StationType>

	<!-- Commonwealth Settlement -->

	<StationType UNID="&stCommonwealthSettlement;"
			name=				"Commonwealth settlement"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, fleetDelivery, friendly, generic, human, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsAbandonedStation;"
			
			size=				"390"
			armorID=			"&itP120HexphaseArmor;"
			hitPoints=			"950"
			multiHull=			"true"
			regen=              "20"
			shipRegen=			"4"
				 
			canAttack=			"true"
			explosionType=		"&vtThermoExplosion2;"
			ejectaType=			"&vtWreckEjecta;"
			fireRateAdj=		"40"
			>

		<Names noArticle="true">Commonwealth Settlement %1%0%0%0</Names>

		<!-- Encounter Info -->

		<Encounter
				levelFrequency=		"----- -ucr- ----- ----- -----"
				locationCriteria=	"+planetary"
				enemyExclusionRadius="50"
				/>

		<!-- Trade and Items -->
		
		<Trade currency="credit" max="50000" replenish="2500">
			<Sell	criteria="m +commonwealth; -premiumAmmo; -illegal; -notForSale; -notStandard;" priceAdj="100" inventoryAdj="200" levelFrequency="systemLevel:ruc|c|cur"/>
			<Sell	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="amdNU -Illegal; -NotForSale;"		priceAdj="50"/>
			<Buy	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="90"/>
			<Buy	criteria="*NU -Illegal; -ID;"				priceAdj="10"/>
			
			<Refuel			criteria="f +BasicFuel; L:1-8;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-8;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-8;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-8;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-8;" priceAdj="100"/>

			<ConsumeTrade	criteria="{core.antimatterFuel}"	impact="2"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="5"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="3"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="2"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
			<ConsumeTrade	criteria="{core.ore}"			impact="2"/>
		</Trade>

		<Items>
			<RandomItem count="10" 
					criteria=		"ad L:1-8; -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:r|c|cur"
					/>
			<RandomItem count="10" 
					criteria=		"*~ad -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:ru|c|cur"
					/>

			<Item count="4d12"	item="&itPteracniumFuelRod;" />
		</Items>

		<!-- Configuration -->
		
		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>

		<!-- Satellites -->
		
		<Satellites overlapCheck="asteroids">
			<Orbitals distance="12" angle="45">
				<Station type="&stCommonwealthTurret;" imageVariant="2"/>
			</Orbitals>

			<Orbitals distance="12" angle="135">
				<Station type="&stCommonwealthTurret;" imageVariant="1"/>
			</Orbitals>

			<Orbitals distance="12" angle="225">
				<Station type="&stCommonwealthTurret;" imageVariant="0"/>
			</Orbitals>

			<Orbitals distance="12" angle="315">
				<Station type="&stCommonwealthTurret;" imageVariant="3"/>
			</Orbitals>
		</Satellites>

		<!-- Ships and Defenses -->
		
		<Ships>
			<Lookup count="2" table="&tbCommDefenders;"/>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>

		<!-- Image and Effects -->
		
		<Image imageID="&rsCommonwealthSettlement;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>
		
		<!-- Dock Screens -->
		
		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: (cat "n +commonwealthSettlement; =" (sysGetLevel) ";")
									noMissionTextID: 'descHallEmpty
									maxPerStation: 1
									})
							</Action>

							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange; {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionDockServices">
								(rpgDockServices gPlayerShip {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>
		
		<!-- Events and Data -->

		<StaticData>
			<NPCService>
				(	;	service					level	margin
					(	'repairArmor			8		100		)
					)
			</NPCService>
		</StaticData>

		<Events>
			<OnContractGenerate>
				(intGenerateStandardRequestContract1)
			</OnContractGenerate>

			<OnContractQuery>True</OnContractQuery>
		</Events>

		<Language>
			<Text id="descWelcome">
				You are in the docking bay of a Commonwealth settlement. Except for a few shuttles,
				the docking bay of this station is deserted. A loose hose is spilling dirty
				water onto the landing pad; elsewhere, an automatic load-lifter moves forward
				and back again as it unloads a ship's cargo hold. The air smells of liquid fuel
				and exhaust.
			</Text>
		</Language>
	</StationType>

	<!-- NavSign

		INITIAL DATA

		At create time we expect the following data to be initialized:

		Info:	A full description revealed if the player docks
		Sign:	The text of the sign.
	
	 -->

	<StationType UNID="&stCommonwealthNavSign;"
			name=				"(navigational beacon)"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsNavSign;"
			abandonedScreen=	"&dsAbandonedNavSign;"
			noMapLabel=			"true"

			mass=				"5000"
			armorID=			"&itUltraLightTitaniumArmor;"
			hitPoints=			"20"
			>

		<Names>: NavSign %s-%0%0%0</Names>

		<Image imageID="&rsStations1;" imageX="0" imageY="668" imageWidth="128" imageHeight="64"/>

		<DockingPorts>
			<Port x="-80"		y="0" />
		</DockingPorts>

		<Events>
			<OnCreate>
				(block (
					; These offsets control the position of the text relative to
					; the center of the sign (Cartessian coordinates)

					(xOffset 6)
					(yOffset 19)

					;	Sign text

					(languageTable (objGetData gSource 'languageTable))
					(signText (or
						(typTranslate languageTable (objGetData gSource 'signID))
						(objGetData gSource 'sign)
						(scrTranslate gScreen 'core.navSignText)
						))

					theID 
					)

					; Create an effect for the sign.

					(setq theID 
						(objAddOverlay gSource &ovNavSignText; (sysVectorPixelOffset gSource xOffset yOffset) 0)
						)

					; Set the text of the sign

					(objSetOverlayEffectProperty gSource theID 'text signText)
					)
			</OnCreate>

			<OnDestroy>
				; Remove all overlays
				(enum (objGetOverlays gSource) theID
					(objRemoveOverlay gSource theID)
					)
			</OnDestroy>
		</Events>

		<Language>
			<Text id="core.navSignText">Welcome!</Text>
		</Language>
	</StationType>

	<OverlayType UNID="&ovNavSignText;"
            attributes=         "effect"
            >
		<Effect>
			<Text text="Nav Sign"
					font="SmallBold"
					primaryColor="0xc4, 0xdf, 0x9b"
					/>
		</Effect>
	</OverlayType>

	<Globals>
		(block Nil
			(setq comSealedContainerHack (lambda ()
				; If we went to trial for having a sealed container, then set a flag so
				; that the container gets confiscated next time (instead of being imprisoned
				; again).
				;
				; To fix this hack we need to have an OnGlobalPlayerDocked event in which
				; we check for a smuggled sealed container (and set the appropriate crime)
				; instead of the setting the crime inside of GetGlobalDockScreen (which
				; should not have any side-effects).
				
				(if
					(and (not (objGetItems gPlayerShip "*I+SmugglersHold;")) 
							(objGetItems gPlayerShip "*U+SealedContainer;"))
						(objSetData gPlayerShip "00001002_ConfiscateSealedContainer" True)
						
					(objSetData gPlayerShip "00001002_ConfiscateSealedContainer" Nil)
					)
					
				; Same thing for slaves
				
				(if
					(and (objGetData gPlayerShip "slaveSales")
							(objGetItems gPlayerShip "* +Slaves;"))
						(objSetData gPlayerShip "00001002_ConfiscateSlaves" True)
						
					(objSetData gPlayerShip "00001002_ConfiscateSlaves" Nil)
					)
				))
				
			(setq comTrafficControl (lambda (homeObj maxTraffic)
				(if (ls (count (sysFindObject homeObj "s D:0010300C_traffic;")) maxTraffic)
					(block (theShip)
						(setq theShip (sysCreateShip
							&tbCommTraffic;
							(random (sysFindObject Nil "G -uncharted;"))
							&svCommonwealth;
							&evCommTrafficBehavior;
							))
						(objSetObjRefData theShip "home" homeObj)
						(objFireEvent theShip "OrderBeginTraffic")
						)
					)
				))

			(setq intCommonwealthCrime (lambda (severity description)
				(if (gr severity (int (objGetData gPlayerShip "commonCrimeSeverity")))
					(block Nil
						(objSetData gPlayerShip "commonCrimeSeverity" severity)
						(objSetData gPlayerShip "commonCrime" description)
						)
					)
				))

			(setq intCommonwealthOnDestroy (lambda Nil
				(block Nil
					; Destroy items on the station
					(rpgDestroyItems gSource)

					; Add to the player's record
					(if (and gPlayerShip (eq aOrderGiver gPlayerShip))
						(intCommonwealthCrime 3 (cat "the destruction of " (objGetName gSource 4)))
						)
					)
				))
			)
	</Globals>

	<!-- Commonwealth Confiscate -->

	<DockScreen UNID="&dsCommonwealthConfiscate;"	nestedScreen="true">

		<Panes>
			<Default>
				<OnPaneInit>
					(block (desc itemToRemove itemsToConfiscate)
					
						; If we don't have a smuggler's cargo hold, then we confiscate
						; all illegal items.
						(if (not (objGetItems gPlayerShip "*I+SmugglersHold"))
							(setq itemsToConfiscate 
								(objGetItems gPlayerShip "*U +Illegal; -ID;")
								)
							)
							
						; If we don't have a military ID, then confiscate military items
						; NOTE: In this case, we honor any military ID.
						(if (not (objGetItems gPlayerShip "*+MilitaryID"))
							(setq itemsToConfiscate (append itemsToConfiscate
								(objGetItems gPlayerShip "*U +Military; -ID;")
								))
							)
					
						; Remove items
						(enum itemsToConfiscate itemToRemove
							(objRemoveItem gPlayerShip itemToRemove)
							)

						; Compose text
						(setq desc "Commonwealth Customs has inspected your ship's cargo hold and confiscated ")
						(if (eq (count itemsToConfiscate) 1)
							(scrSetDesc gScreen (cat desc (itmGetName (item itemsToConfiscate 0) 8) "."))
							(block (i)
								(for i 0 (subtract (count itemsToConfiscate) 3)
									(setq desc (cat desc (itmGetName (item ItemsToConfiscate i) 8) ", "))
									)
								(setq desc (cat desc (itmGetName (item ItemsToConfiscate (subtract (count itemsToConfiscate) 2)) 8) " and "))
								(setq desc (cat desc (itmGetName (item ItemsToConfiscate (subtract (count itemsToConfiscate) 1)) 8) "."))
								(scrSetDesc gScreen desc)
								)
							)
						)
				</OnPaneInit>

				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(block Nil
							(comSealedContainerHack)
							(scrExitScreen gScreen)
							)
					</Action>
				</Actions>
			</Default>
		</Panes>
	</DockScreen>

	<!-- Commonwealth Decontamination -->

	<DockScreen UNID="&dsCommonwealthDecon;"	nestedScreen="true">
		<Panes>
			<Default>
				<OnPaneInit>
					(block (
						(currencyUsed (objGetProperty gSource 'currency))
						(cost (ecoExchange 250 'credit currencyUsed))
						)
						(if (geq (objGetBalance gPlayerShip currencyUsed) cost)
							(block Nil
								(scrSetDescTranslate gScreen 'customs.chargedForDecon { cost:(fmtCurrency currencyUsed cost) })
								(objCharge gPlayerShip currencyUsed cost)
								(shpDecontaminate gPlayerShip)
								)
							(scrSetDescTranslate gScreen 'customs.cantAffordDecon { cost:(fmtCurrency currencyUsed cost) })
							)
						)
				</OnPaneInit>

				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						; If the ship is still radioactive, force undock.
						; Otherwise, we just exit the screen and go back to the default screen
						
						(scrExitScreen gScreen (shpIsRadioactive gPlayerShip))
					</Action>
				</Actions>
			</Default>
		</Panes>
		
		<Language>
			<Text id="customs.chargedForDecon">

				Commonwealth Customs stops your ship for decontamination. You 
				are automatically charged %cost% for decontaminating your ship.

			</Text>
			<Text id="customs.cantAffordDecon">

				Commonwealth Customs stops your ship for decontamination.
				Unfortunately, you do not have %cost% to pay for decontamination.

			</Text>
		</Language>
	</DockScreen>

	<!-- Commonwealth Free Slaves -->

	<DockScreen UNID="&dsCommonwealthFreeSlaves;"	nestedScreen="true">

		<Panes>
			<Default>
				<OnPaneInit>
					(block (desc itemToRemove)
						; Free the slaves
						(setq totalSlaves 0)
						(enum (objGetItems gPlayerShip "*+Slaves;") itemToRemove
							(block Nil
								(setq totalSlaves (add totalSlaves (itmGetCount itemToRemove)))
								(objRemoveItem gPlayerShip itemToRemove)
								)
							)

						; Keep track of how many we have freed in total
						(objIncData gPlayerShip "slavesFreed" totalSlaves)

						; Create description
						(setq desc "As soon as you dock you inform the Commonwealth authorities that you have rescued ")
						(switch
							(eq totalSlaves 1)
								(setq desc (cat desc "a slave. The jaded officer takes the slave coffin and files a routine report."))

							(eq totalSlaves 2)
								(setq desc (cat desc "a couple of slaves. The jaded officer takes the two slave coffins and files a routine report."))

							(setq desc (cat desc "several slaves. The officer in charge thanks you for your role in the rescue: \"You must have a pretty good ship to have survived a fight against Slavers!\""))
							)

						(scrSetDesc gScreen desc)
						)
				</OnPaneInit>

				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(block (freed rewarded)
							(setq freed (objGetData gPlayerShip "slavesFreed"))
							(setq rewarded (objGetData gPlayerShip "slaveReward"))

							(switch
								(and (geq freed 12) (ls rewarded 12))
									(scrShowPane gScreen "Reward1")

								(and (geq freed 24) (ls rewarded 24))
									(scrShowPane gScreen "Reward1")

								(scrExitScreen gScreen)
								)
							)
					</Action>
				</Actions>

			</Default>

			<Reward1>
				<OnPaneInit>
					(block (reward roll)
						; Create a random reward
						(setq roll (random 1 100))
						(switch
							(ls roll 25)
								(setq reward (itmCreate &itLongzhuSphere; (random 1 3)))

							(ls roll 60)
								(setq reward (itmCreate &itPromethiumCrystal; (random 1 4)))

							(setq reward (itmCreate &itCalligraphyScroll; 1))
							)

						; Give it to the player
						(objAddItem gPlayerShip reward)
						(scrSetDesc gScreen (cat "Once revived, one of the former slaves turns to you and puts something in your hand. She turns and walks away without saying a word. When you open your hand you see: " (itmGetName reward 8) "."))
						)
				</OnPaneInit>

				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(block Nil
							(objSetData gPlayerShip "slaveReward" (objGetData gPlayerShip "slavesFreed"))
							(scrExitScreen gScreen)
							)
					</Action>
				</Actions>
			</Reward1>
		</Panes>

	</DockScreen>

	<!-- Commonwealth Imprison -->

	<DockScreen UNID="&dsCommonwealthImprison;"	nestedScreen="true">
		<Panes>
			<Default>
				<OnPaneInit>
					(scrSetDesc gScreen 
						"As you enter the station you are surrounded by heavily armed soldiers. "
						"A Commonwealth official approaches you:\n\n"
						"\"You are under arrest for " (objGetData gPlayerShip "commonCrime") ".\"" 
						)
				</OnPaneInit>

				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(scrShowPane gScreen "TrialIntro")
					</Action>
				</Actions>
			</Default>
			
			<TrialIntro>
				<OnPaneInit>
					(scrSetDesc gScreen
						"You appear before a magistrate who reads out the charges:\n\n"
						"\"%name%, you are accused of " (objGetData gPlayerShip "commonCrime") ". "
						"How do you plead?\""
						)
				</OnPaneInit>
				
				<Actions>
					<Action name="&quot;Guilty.&quot;" default="1" cancel="1" key="G">
						(switch
							; If this is a serious crime, then always prison
							(eq (objGetData gPlayerShip "commonCrimeSeverity") 3)
								(block Nil
									(setq gResult (cat
										"\"In view of the seriousness of the crime, the Court has no choice "
										"but to sentence you to a minimum of ten years in a Commonwealth rehabilitation colony.\n\n"
										"\"Court dismissed!\""
										))
									(scrShowPane gScreen "VerdictImprison")
									)

							; If first offense, then the court is lenient
							(not (objGetData gPlayerShip "commonCrimeRecord"))
								(block Nil
									(setq gCost 5000)
									(setq gResult (cat
										"\"In view of your otherwise clean record, and your acceptance of responsibility, "
										"the Commonwealth fines you the sum of " gCost " credits for your crimes.\n\n"
										"\"Court dismissed!\""
										))
									(scrShowPane gScreen "VerdictRelease")
									)
									
							; If second offense, then we're still lenient
							(eq (objGetData gPlayerShip "commonCrimeRecord") 1)
								(block Nil
									(setq gCost 25000)
									(setq gResult (cat
										"\"In view of your acceptance of responsibility, "
										"the Commonwealth fines you the sum of " gCost " credits for your crimes.\n\n"
										"\"Court dismissed!\""
										))
									(scrShowPane gScreen "VerdictRelease")
									)
									
							; Otherwise, locked away
							(block Nil
								(setq gResult (cat
									"\"Your past criminal record gives me no expectation of future good behavior. "
									"You are hereby sentenced to twenty years in a Commonwealth rehabilitation colony.\n\n"
									"\"Court dismissed!\""
									))
								(scrShowPane gScreen "VerdictImprison")
								)
							)
					</Action>
					
					<Action name="&quot;Not guilty!&quot;" key="N">
						(switch
							; Sometimes there is not enough evidence
							(leq (random 1 100) 25)
								(block Nil
									(setq gResult (cat
										"After a lengthy trial, the Court finds you not guilty due to lack of evidence.\n\n"
										"\"Our laws compel us to set you free. But if you are guilty, you may find "
										"your conscience to be more of a torment than prison ever could.\n\n"
										"\"Court dismissed!\""
										))
									(scrShowPane gScreen "VerdictNotGuilty")
									)
									
							; If this is a serious crime, then always prison
							(eq (objGetData gPlayerShip "commonCrimeSeverity") 3)
								(block Nil
									(setq gResult (cat
										"After a trial, the Court finds you guilty as charged.\n\n"
										"\"In view of the seriousness of the crime, the Court sentences you to "
										"life without parole in a Commonwealth rehabilitation colony.\n\n"
										"\"Court dismissed!\""
										))
									(scrShowPane gScreen "VerdictImprison")
									)

							; If first offense, then the court is lenient
							(not (objGetData gPlayerShip "commonCrimeRecord"))
								(block Nil
									(setq gCost 25000)
									(setq gResult (cat
										"After a short trial, the Court finds you guilty as charged.\n\n"
										"\"In view of your otherwise clean record "
										"the Commonwealth fines you the sum of " gCost " credits for your crimes.\n\n"
										"\"Court dismissed!\""
										))
									(scrShowPane gScreen "VerdictRelease")
									)
									
							; Otherwise, locked away
							(block Nil
								(setq gResult (cat
									"After a trial, the Court finds you guilty as charged.\n\n"
									"\"Your past criminal record gives me no expectation of future good behavior. "
									"You are hereby sentenced to twenty years in a Commonwealth rehabilitation colony.\n\n"
									"\"Court dismissed!\""
									))
								(scrShowPane gScreen "VerdictImprison")
								)
							)
					</Action>
				</Actions>
			</TrialIntro>
			
			<VerdictNotGuilty>
				<OnPaneInit>
					(scrSetDesc gScreen gResult)
				</OnPaneInit>
				
				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(block Nil
							(objSetData gPlayerShip "commonCrimeSeverity" 0)
							(objSetData gPlayerShip "commonCrime" Nil)
							(comSealedContainerHack)
							(scrExitScreen gScreen)
							)
					</Action>
				</Actions>
			</VerdictNotGuilty>
			
			<VerdictRelease>
				<OnPaneInit>
					(scrSetDesc gScreen gResult)
				</OnPaneInit>
				
				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(if (geq (plyGetCredits gPlayer) gCost)
							(block Nil
								(plyCharge gPlayer gCost)
								(objIncData gPlayerShip "commonCrimeRecord" 1)
								(objSetData gPlayerShip "commonCrimeSeverity" 0)
								(objSetData gPlayerShip "commonCrime" Nil)
								(comSealedContainerHack)
								(scrExitScreen gScreen)
								)
							(scrShowPane gScreen "CantPay")
							)
					</Action>
				</Actions>
			</VerdictRelease>
			
			<VerdictImprison>
				<OnPaneInit>
					(scrSetDesc gScreen gResult)
				</OnPaneInit>
				
				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(block Nil
							(plyDestroyed gPlayer (cat "was imprisoned for " (objGetData gPlayerShip "commonCrime")))
							(scrExitScreen gScreen 'forceUndock)
							)
					</Action>
				</Actions>
			</VerdictImprison>

			<CantPay>
				<OnPaneInit>
					(scrSetDesc gScreen
						"Unfortunately, you cannot afford to pay the fine. "
						"The Commonwealth decides to sell your ship to cover your debt."
						)
				</OnPaneInit>
				
				<Actions>
					<Action name="Continue" default="1" cancel="1" key="C">
						(block Nil
							(plyDestroyed gPlayer (plyComposeString gPlayer (cat "lost %his% ship after a criminal conviction")))
							(scrExitScreen gScreen 'forceUndock)
							)
					</Action>
				</Actions>
			</CantPay>
		</Panes>
	</DockScreen>

	<!-- Donate Item to Container Habitat -->

	<DockScreen UNID="&dsContainerHabitatDonateItem;"
			type=				"itemPicker"
			nestedScreen=		"true"
			inherit=			"&dsDockScreenBase;"
			>

		<ListOptions
			dataFrom=	"player"
			list=		"*U -ID; -questItem;"
			/>

		<Panes>
			<Default descID="descDonateWhat">
				<OnPaneInit>
					(scrEnableAction gScreen 'actionDonateThisItem (scrGetItem gScreen))
				</OnPaneInit>

				<Actions>
					<Action id="actionDonateThisItem" default="1">
						(block (
							(theItem (scrGetItem gScreen))
							(maxCount (itmGetCount theItem))
							)
							(switch
								(gr maxCount 1)
									(scrShowPane gScreen 'Quantity)

								(block Nil
									(setq theItem (scrRemoveItem gScreen 1))
									(scrExitScreen gScreen)
									(scrShowScreen gScreen &dsContainerHabitatReward; {
										donatedItem: theItem
										})
									)
								)
							)
					</Action>

					<Action id="actionCancel" cancel="1">
						<Exit/>
					</Action>
				</Actions>					
			</Default>

			<Quantity
					showCounter=	"true">

				<OnPaneInit>
					(block (
						(theItem (scrGetItem gScreen))
						)
						(scrSetDescTranslate gScreen 'descDonateQuantity { items: (itmGetName theItem 'plural) })
						(scrSetCounter gScreen (itmGetCount theItem))
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionDonate" default="1">
						(block (
							(theItem (scrGetItem gScreen))
							(maxCount (itmGetCount theItem))
							(count (scrGetCounter gScreen))
							)
							(switch
								(gr count maxCount)
									(scrSetCounter gScreen maxCount)

								(block Nil
									(setq theItem (scrRemoveItem gScreen count))
									(scrExitScreen gScreen)
									(scrShowScreen gScreen &dsContainerHabitatReward; {
										donatedItem: theItem
										})
									)
								)
							)
					</Action>

					<Action id="actionCancel" cancel="1">
						(scrShowPane gScreen 'Default)
					</Action>
				</Actions>
			</Quantity>
		</Panes>

		<Language>
			<String id="descDonateWhat">"What do you want to give us?"</String>
			<String id="descDonateQuantity">"How many %items% do you want to give us?"</String>
		</Language>
	</DockScreen>

	<DockScreen UNID="&dsContainerHabitatReward;"
			nestedScreen=		"true"
			inherit=			"&dsDockScreenBase;"
			>

		<OnScreenInit>
			(scrSetData gScreen 'donatedItem (or (@ gData 'donatedItem) gItem))
		</OnScreenInit>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (
						(theItem (scrGetData gScreen 'donatedItem))

						;	Look for the entry in the donation table
						(table (objGetStaticData gSource 'DonationTable))
						(entry (match table thisEntry
							(or
								;	If the criteria in the table is Nil, then we always match. This
								;	is for the last (default) entry.
								(not (@ thisEntry 0))

								;	If the criteria is an integer, then we see if this is the UNID
								;	of the item.
								(= (itmGetType theItem) (@ thisEntry 0))

								;	If the criteria matches, then we have an entry
								(itmMatches theItem (@ thisEntry 0))
								)
							))

						(totalValue (* (objGetBuyPrice gSource theItem) (itmGetCount theItem)))

						(result (@ entry 2))
						incPoints
						)

						;	Calculate how valuable the donation was
						(switch
							;	If the player donated rotted food, then we're insulted
							(and (itmMatches theItem "* +FreshFood;") (= totalValue 0))
								(block Nil
									(objSetTypeData gSource 'donationPoints 0)
									(setq result 'rottedFood)
									(setq incPoints Nil)
									)

							;	If 0, then we get result regardless of quantity
							(eq (@ entry 1) 0)
								(setq incPoints Nil)

							;	If -1, then each item counts for +1 donation points
							(eq (@ entry 1) -1)
								(setq incPoints (itmGetCount theItem))

							;	Otherwise, depends on the value of the item
							(setq incPoints (divide totalValue (@ entry 1)))
							)

						(if (= incPoints 0)
							(setq result 'notEnough)
							)
						(scrSetData gScreen 'result result)

						;	Accumulate donation points
						(typIncData (objGetType gSource) 'donationPoints incPoints)

						;	Deal with the result appropriately
						(switch
							(= result 'rottedFood)
								(scrSetDescTranslate gScreen 'descDonateInsulted)

							(= result 'notEnough)
								(scrSetDescTranslate gScreen 'descDonateNotEnough)

							(= result 'info)
								(scrSetDescTranslate gScreen 'descDonateThanks {
									item: (itmGetName theItem 'demonstrative)
									})

							;	Thanks for nothing
							(scrSetDescTranslate gScreen
								(if (gr (itmGetCount theItem) 1)
									'descDonateUselessPlural
									'descDonateUseless
									)
								)
							)
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionContinue" cancel="1" default="1">
						(switch
							(= (scrGetData gScreen 'result) 'info)
								(if (geq (objGetTypeData gSource 'donationPoints) 5)
									(scrShowPane gScreen "RewardInfo")
									(block Nil
										(scrExitScreen gScreen)
										(rpgRumorShow {
											rumorCriteria: "+commonwealthContainer"
											noRumorTextID: 'descNoRumors
											})
										)
									)

							(scrExitScreen gScreen)
							)
					</Action>
				</Actions>
			</Default>

			<RewardInfo descID="descRewardInfo">
				<OnPaneInit>
					(block (
						(donationPoints (objGetTypeData gSource 'donationPoints))
						)

						; Equipment location available after 5 donation points
						(scrShowAction gScreen 'actionInfoEquipment (geq donationPoints 5))

						; Centauri warlords info available in Eridani after 10 points
						(scrShowAction gScreen 'actionInfoCentauriBase
							(and (geq donationPoints 10) (eq (sysGetNode) 'SE))
							)

						; Arco Vaughn info available after 20 points and only in SE or if he
						; is still alive
						(scrShowAction gScreen 'actionInfoArcoVaughn
							(and (geq donationPoints 20)
								(eq (sysGetNode) 'SE)
								(not (eq (typGetGlobalData &scArcoVaughnHeavyRaider; "status") 'destroyed))
								)
							)

						; Korolov station info available after 5 points if past SE
						(scrShowAction gScreen 'actionInfoKorolov
							(and (geq donationPoints 5)
								(not (eq (sysGetNode) 'SE))
								(leq (sysGetLevel) 3)
								)
							)
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionInfoEquipment">
						(scrShowPane gScreen "RewardInfoEquipment")
					</Action>

					<Action id="actionInfoCentauriBase">
						(scrShowPane gScreen "RewardInfoCentauriBase")
					</Action>

					<Action id="actionInfoArcoVaughn">
						(scrShowPane gScreen "RewardInfoArcoVaughn")
					</Action>

					<Action id="actionInfoKorolov">
						(scrShowPane gScreen "RewardInfoKorolov")
					</Action>

					<Action id="actionNevermind" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</RewardInfo>

			<RewardInfoEquipment>
				<OnPaneInit>
					(block (desc bestObj bestItem allItems bestItems)
						(setq aTargetObj Nil)
						(setq aEvent Nil)
						(setq desc "")

						; Make a list of all potential items
						(setq allItems Nil)
						(enum (sysFindObject gSource "T") theObj
							(enum (objGetItems theObj "wsUN") theItem
								(if	(and (geq (itmGetLevel theItem) 3)
										(not (objHasItem gPlayerShip theItem))
										(or (objIsEnemy gPlayerShip theObj)
											(gr (objGetSellPrice theObj theItem) 0)))
									(setq allItems (append allItems (list (list theObj theItem))))
									)
								)
							)

						; Filter out any items that the player already has installed
						(setq allItems (filter allItems theEntry
							(not 
								; This filter returns the set of installed items that is equal
								; to the items that we found
								(filter (objGetItems gPlayerShip "wsI") theItem
									(eq (itmGetType theItem) (itmGetType (item theEntry 1)))
									)
								)
							))

						; Make a list of lootable items or items that the player doesn't know about
						(setq bestItems (filter allItems theEntry
							(or (objIsEnemy gPlayerShip (item theEntry 0))
								(not (objIsKnown (item theEntry 0)))
								)
							))
						(if (not bestItems)
							(setq bestItems allItems)
							)

						; Pick a random high-level item
						(setq bestItem Nil)
						(setq bestObj Nil)
						(if bestItems
							(for i 1 10
								(block (trialEntry)
									(setq trialEntry (random bestItems))
									(if (or (not bestItem)
											(gr (itmGetLevel (item trialEntry 1)) (itmGetLevel bestItem)))
										(block Nil
											(setq bestObj (item trialEntry 0))
											(setq bestItem (item trialEntry 1))
											)
										)
									)
								)
							)

						; If an item was found, then set up everything
						(if bestItem
							(block Nil
								(setq desc (cat desc
									"\""
									(objGetName bestObj 0x05) " in this system has "
									(itmGetName bestItem 0x04) ". "
									(if (objIsEnemy gPlayerShip bestObj)
										"If you destroy the station, you will be able to loot it. "
										"If you go to the station you will be able to buy it. "
										)
									"I'll give you the coordinates, if you want.\""
									))

								(setq aTargetObj bestObj)
								(if (objIsEnemy gPlayerShip bestObj)
									(setq aEvent "OrderDestroyTarget")
									(setq aEvent "OrderDockWithTarget")
									)
								)

							; Otherwise, if no item found, then we're sorry
							(setq desc (cat desc
								"\"Sorry, I don't know of anything in the system that could help you.\""
								))
							)

						(scrSetDesc gScreen desc)

						; Enable disable buttons
						(scrShowAction gScreen 'actionCoordinates aEvent)
						(scrShowAction gScreen 'actionNevermind aEvent)
						(scrShowAction gScreen 'actionContinue (not aEvent))
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionCoordinates" default="1">
						(block Nil
							(objFireEvent gSource aEvent)
							(scrShowPane gScreen "RewardInfoDone")
							)
					</Action>

					<Action id="actionNevermind" cancel="1">
						(scrExitScreen gScreen)
					</Action>

					<Action id="actionContinue" default="1" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</RewardInfoEquipment>

			<RewardInfoCentauriBase>
				<OnPaneInit>
					(block (desc targetList)
						(setq aTargetObj Nil)
						(setq aEvent Nil)
						(setq desc "The station master grabs you and speaks softly in your ear:\n\n")

						(setq targetList (sysFindObject gSource "TA +centauriWarlords; +populated; -occupation; -questTarget; -uncharted;"))
						(if targetList
							(block Nil
								(setq aTargetObj (random targetList))
								(setq desc (cat desc
									"\"I know the location of one of the Centauri bases. I'll give you the coordinates so that you can destroy it. But don't tell anyone where you got it, OK?\""
									))

								; Set player target
								(setq aEvent "OrderDestroyTarget")
								)
							(setq desc "\"Sorry, I don't know of any active Centauri bases in this system.\"")
							)

						(scrSetDesc gScreen desc)

						; Enable disable buttons
						(scrShowAction gScreen 'actionCoordinates aEvent)
						(scrShowAction gScreen 'actionNevermind aEvent)
						(scrShowAction gScreen 'actionContinue (not aEvent))
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionCoordinates" default="1">
						(block Nil
							(objFireEvent gSource aEvent)
							(scrShowPane gScreen "RewardInfoDone")
							)
					</Action>

					<Action id="actionNevermind" cancel="1">
						(scrExitScreen gScreen)
					</Action>

					<Action id="actionContinue" default="1" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</RewardInfoCentauriBase>

			<RewardInfoArcoVaughn>
				<OnPaneInit>
					(block (desc targetList)
						(setq aTargetObj Nil)
						(setq aEvent Nil)
						(setq desc "The station master grabs you and speaks softly in your ear:\n\n")

						(switch
							(eq (typGetGlobalData &scArcoVaughnHeavyRaider; "status") 'destroyed)
								(setq desc (cat
									"\"Arco Vaughn is dead, thankfully!\""
									))

							(not (sysFindObject gSource "s +arcoVaughn;"))
								(setq desc (cat
									"\"Arco Vaughn is not in this system; last I heard he was in the Eridani system.\""
									))

							(block Nil
								(setq desc (cat desc
									"\"If you're hunting Arco Vaughn, I know where you can find him. He has a habitat deep in the outer system. "
									"I'll give you his coordinates, but don't say where you got them.\""
									))

								; Set player target
								(setq aTargetObj (sysFindObject gSource "sN +arcoVaughn;"))
								(setq aEvent "OrderDestroyTarget")
								)
							)

						(scrSetDesc gScreen desc)

						; Enable disable buttons
						(scrShowAction gScreen 0 aEvent)
						(scrShowAction gScreen 'actionNevermind aEvent)
						(scrShowAction gScreen 'actionContinue (not aEvent))
						)
				</OnPaneInit>

				<Actions>
					<Action name="&quot;Give me his coordinates, please!&quot;" key="C" default="1">
						(block Nil
							(objFireEvent gSource aEvent)
							(scrShowPane gScreen "RewardInfoDone")
							)
					</Action>

					<Action id="actionNevermind" cancel="1">
						(scrExitScreen gScreen)
					</Action>

					<Action id="actionContinue" default="1" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</RewardInfoArcoVaughn>

			<RewardInfoKorolov>
				<OnPaneInit>
					(block (desc targetList)
						(setq aTargetObj Nil)
						(setq aEvent Nil)

						(setq targetList (sysFindObject gSource "TA +korolovShipping; +populated; -occupation; -uncharted;"))
						(if targetList
							(block Nil
								(setq aTargetObj (random targetList))
								(setq desc (cat 
									"The station master is happy to oblige:\n\n"
									"\"Yeah, there's a Korolov station in this system. I can give you their coordinates, if you want.\""
									))

								; Set player target
								(setq aEvent "OrderDockWithTarget")
								)
							(setq desc (cat 
								"The station master thinks for a moment:\n\n"
								"\"No, sorry, there aren't any in this system, as far as I know.\""
								))
							)

						(scrSetDesc gScreen desc)

						; Enable disable buttons
						(scrShowAction gScreen 0 aEvent)
						(scrShowAction gScreen 'actionNevermind aEvent)
						(scrShowAction gScreen 'actionContinue (not aEvent))
						)
				</OnPaneInit>

				<Actions>
					<Action name="&quot;Give me their coordinates, please!&quot;" key="C" default="1">
						(block Nil
							(objFireEvent gSource aEvent)
							(scrShowPane gScreen "RewardInfoDone")
							)
					</Action>

					<Action id="actionNevermind" cancel="1">
						(scrExitScreen gScreen)
					</Action>

					<Action id="actionContinue" default="1" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</RewardInfoKorolov>

			<RewardInfoDone>
				<OnPaneInit>
					(scrSetDesc gScreen (cat
						"\"Done. Just follow the marker on your display and you will get there."
						(if (objIsEnemy gSource aTargetObj)
							" Remember, don't say anything about where you got it.\""
							"\""
							)
						))
				</OnPaneInit>

				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						<Exit/>
					</Action>
				</Actions>
			</RewardInfoDone>
		</Panes>

		<Language>
			<String id="actionInfoEquipment">"I need better [e]quipment."</String>
			<String id="actionInfoCentauriBase">"Where are the [C]entauri warlords?"</String>
			<String id="actionInfoArcoVaughn">"Where is [A]rco Vaughn?"</String>
			<String id="actionInfoKorolov">"Is there a [K]orolov station nearby?"</String>
			<String id="actionCoordinates">"Give me the [c]oordinates, please!"</String>
			<String id="actionNevermind">"[N]evermind, I'm all set."</String>

			<String id="descDonateNotEnough">"Thanks, that's something we need more of around here."</String>
			<String id="descDonateThanks">"Thank you, %sir%! We'll put %item% to good use. Maybe I can help you in return."</String>
			<String id="descDonateInsulted">"Kack! What do you think we're going to do with that? Thanks for nothing!"</String>
			<Text id="descDonateUseless">
				"Yeah, I guess you won't be needing that where you're going.
				Not sure we need it ourselves, but thanks anyway."
			</Text>
			<Text id="descDonateUselessPlural">
				"Yeah, I guess you won't be needing them where you're going.
				Not sure we need them ourselves, but thanks anyway."
			</Text>
			<Text id="descRewardInfo">
				"I know a thing or two about getting around in this system.
				What do you need to know?"
			</Text>
		</Language>
	</DockScreen>

<!-- BASIC COMMONWEALTH RULES

	PLAYER DATA
	
	commonCrime:	Description of the player's crime (e.g., "slave-trading")
	commonCrimeSeverity: The severity of the crime
						0 = No crime
						1 = Misdemeanor (drug possession)
						2 = Felony (piracy)
						3 = Crimes against Humanity (slave-trading, genocide, mass-destruction)
	commonCrimeRecord: Number of times player has been caught and released for a felony
	
-->

	<Sovereign UNID="&svCommonwealth;"
			name=":the Commonwealth"
			adjective="Commonwealth"
			demonym=":a Commonwealth citizen(s)"

			alignment="constructive chaos"
			inherit="&unidCommonText;"
			>

		<AttributeDesc>
			<!-- These item attributes are used across all Human Space (not just for
				Commonwealth). -->

			<ItemAttribute id="human.basicFood"	label="basic food"			criteriaLabel="basic foods"				criteria="* +food; -lux; -illegal;"/>
			<ItemAttribute id="human.lux"		label="luxury good"			criteriaLabel="luxury goods"			criteria="* +lux; -illegal;"/>
			<ItemAttribute id="human.meds"		label="medical supplies"	criteriaLabel="medical supplies"		criteria="* +meds;"/>
			<ItemAttribute id="human.res"		label="industrial resource"	criteriaLabel="industrial resources"	criteria="*~f +res; -ore; -illegal;"/>
		</AttributeDesc>

		<Events>
			<GetGlobalAchievements>
				(append
					;	Crime record
					
					(if (geq (int (objGetData gPlayerShip "commonCrimeSeverity")) 2)
						{
							desc: (typTranslate gType 'textWantedFor { crimeText: (objGetData gPlayerShip 'commonCrime) })
							sectionID: 'criminalRecord
							}
						)
					)
			</GetGlobalAchievements>

			<GetGlobalDockScreen>
				; If the player has docked with an active commonwealth station
				; with customs, then we need to check for various things
				; (like radiation poisoning and smuggling).
				;
				; NOTE: We return a screen and a priority. The priority is used
				; to decide whether other screens should be shown before or after
				; these. Follow these rules:
				;
				; Screens that prevent docking:				10
				; Screens that imprison the player:			8
				; Screens that confiscate:					6
				; Screens that complete missions:			4
				
				(switch
					; This does not apply to stations without customs
					(not (objMatches gSource Nil "sTAV +commonwealthCustoms;"))
						Nil

					; If customs is temporarily disabled, then we don't do anything.
					(= (objFireEvent gSource 'GetCommonwealthCustomsStatus) 'disabled)
						Nil

					; If the player ship is radioactive, then we need to
					; decontaminate.
					(shpIsRadioactive gPlayerShip)
						{	screen:&dsCommonwealthDecon;		priority:10		overrideOnly:true	}

					; If the player has sold slaves then he/she is arrested.
					(geq (int (objGetData gPlayerShip "commonCrimeSeverity")) 2)
						{	screen:&dsCommonwealthImprison;		priority:8		overrideOnly:true	}
						
					; If the player has slaves then free them
					(and (objGetItems gPlayerShip "*+Slaves;")
							(not (objGetData gPlayerShip "00001002_ConfiscateSlaves"))
							)
						{	screen:&dsCommonwealthFreeSlaves;	priority:8		overrideOnly:true	}
						
					; If the player has a black market container, then she is imprisoned
					(and (not (objGetItems gPlayerShip "*I+SmugglersHold;")) 
							(objGetItems gPlayerShip "*U+SealedContainer;")
							(not (objGetData gPlayerShip "00001002_ConfiscateSealedContainer"))
							)
						(block Nil
							; This side-effect is OK because it is OK if we call it multiple
							; times, and it is OK if some other screen takes priority.
							(intCommonwealthCrime 2 "smuggling")
							
							{	screen:&dsCommonwealthImprison;	priority:8		overrideOnly:true	}
							)
							
					; If we have illegal items in the cargo hold then we need
					; to confiscate them
					(and (not (objGetItems gPlayerShip "*I+SmugglersHold"))
							(or (objGetItems gPlayerShip "*U+Illegal; -ID")
								(and (objGetItems gPlayerShip "*U+Military") (not (objGetItems gPlayerShip "*+MilitaryID")))))
						{	screen:&dsCommonwealthConfiscate;	priority:6		overrideOnly:true	}

					Nil
					)
			</GetGlobalDockScreen>
			
			<OnGlobalPlayerSoldItem>
				(switch
					;	If the player sold slaves, chance they get caught
					
					(itmHasAttribute gItem 'slaves)
						(block (
							;	2% chance of arrest per slave sold.
							(chanceOfArrest 2)
							)
							(objIncData gPlayerShip 'slaveSales (ecoExchange aPrice aCurrency 'credit))

							(if (rollChance chanceOfArrest (itmGetCount gItem))
								(intCommonwealthCrime 2 "slave-trading")
								)
							)
					)
			</OnGlobalPlayerSoldItem>
		</Events>
		
		<Language>
			<Text id="textWantedFor">Wanted by the Commonwealth for %crimeText%</Text>
		</Language>
	</Sovereign>

	<EconomyType UNID="&ecCreditEconomy;"
			id=				"credit" 
			currency=		"credit(s)"
			conversion=		"100"
			/>

<!-- BEHAVIORS -->

	<!-- Commonwealth Traffic Behavior
	
		USAGE NOTES
		
		This controls random ships that travel between Commonwealth stations.
		To use:
		
		1. Create the ship at a stargate
		2. Set the event handler
		3. Set the home station
		4. Call "OrderBeginTraffic"
	
		EXTRA DATA
		
		behavior:			Ship's current behavior
								'enteredSystem			= Ship just entered the system
								'docked					= Ship is docked somewhere
								'leavingSystem			= Ship is heading out of the system
								
		home:				Ship's home station

	-->

	<ShipClass UNID="&evCommTrafficBehavior;"
			class=				"(commonwealth traffic behavior)"
			virtual=			"true"
			
			attributes=			"behaviorClass"
			>

		<Events>
			<OrderBeginTraffic>
				(block (homeObj)
					; If the home station is not set, set it now
					(if (not (setq homeObj (objGetObjRefData gSource "home")))
						(block Nil
							(setq homeObj (sysFindObject gSource "TAFN +commonwealth; +primary;"))
							(if (not homeObj)
								(setq homeObj (sysFindObject gSource "TAFN +populated; -occupation;"))
								)

							(objSetObjRefData gSource "home" homeObj)
							)
						)

					; Set data so we know we are traffic
					(objSetData gSource "0010300C_traffic" True)

					; Set state
					(objSetData gSource "behavior" 'enteredSystem)
					)
			</OrderBeginTraffic>
			
			<OnOrdersCompleted>
				(block (behavior newBehavior allDests dockedAt allWrecks allLoot)
					(setq behavior (objGetData gSource "behavior"))
					(setq dockedAt (shpGetDockObj gSource))
					
					; If we're docked at an object, dump any loot that we found
					(if (and dockedAt
							(objHasAttribute dockedAt "populated")
							
							; Compose a list of all loot on board that the station
							; might want to buy from us.
							
							(setq allLoot (filter (objGetItems gSource "*~mf U") theItem
								(objGetBuyPrice dockedAt theItem)
								))
							)
						(block Nil
							(enum allLoot theItem (objRemoveItem gSource theItem))
							(enum allLoot theItem (objAddItem dockedAt theItem))
							)
						)
					
					; Figure out what to do next
					(switch

						; Check for wrecks in the area; if we find some, then loot them
						(and (leq (objGetDestiny gSource) 180)
								(not (objHasAttribute gSource "freighter"))
								(leq (random 1 100) 50)
								
								; Compose a list of all wrecks in the area
								
								(setq allWrecks (rpgFindWrecksToSalvage gSource '0010300c_marked))
								)
							(block (destObj)
								(setq destObj (random allWrecks))
								(shpOrder gSource 'loot destObj)
								(objSetData destObj "0010300c_marked" True)
								(objSetData gSource "behavior" 'looting)
								)
					
						; If we have no destinations or randomly, we gate out
						(or (and (not (eq behavior 'enteredSystem)) (leq (random 1 100) 20))
								(not 
									; Compose a list of stations that we could go to.
									; We exclude the station that we're docked with and any
									; stations that don't have too many dock ports open.

									(setq allDests (filter (sysFindObject gSource "TAF +populated; -korolovShipping; -occupation;") theObj 
										(and (gr (objGetOpenDockingPortCount theObj) 1)
											(or (not dockedAt) (not (eq dockedAt theObj)))
											(not (objFireEvent theObj 'GetTrafficStatus { aObj:gSource }))
											)
										))
									)
								)
							(block (gateObj)
								(setq gateObj (random (sysFindObject gSource "G -uncharted;")))
								(shpOrder gSource 'gate gateObj)
								(objSetData gSource "behavior" 'leavingSystem)
								)
								
						; Otherwise, we go to another station
						(block (destObj)
							(setq destObj (random allDests))
							(shpOrder gSource 'dock destObj)
							(shpOrder gSource 'waitForThreat (random 10 60))
							(objSetData gSource "behavior" 'docked)
							)
						)
						
					; If we were docked at an object that we just looted, then destroy the object
					(if (and (objGetData dockedAt "0010300c_marked")
							(ls (objGetProperty dockedAt 'mass) 2000)
							(not (objGetProperty dockedAt 'immutable))
							)
						(objDestroy dockedAt gSource)
						)
					)
			</OnOrdersCompleted>
		</Events>
	</ShipClass>
	
<!-- BASE CLASSES -->
	
	<!-- Commonwealth Station Base Class
	
	USAGE: Commonwealth stations should inherit from this class. Derived classes
		should manually call OnCreate and OnDestroy in case they need to override
		those events.
	
	-->
	
	<Type unid="&baCommonwealthStation;"
			inherit=			"&unidCommonText;"
			>
		<Events>
			<OnDestroy>
				(intCommonwealthOnDestroy)
			</OnDestroy>
		</Events>

		<Language>
			<Text id="actionMainHall">[M]eeting Hall</Text>

			<Text id="descHallEmpty">
				(block (
					(commemorationText (objGetData gSource 'core.missionCommemoration))
					)
					(switch
						commemorationText
							(objTranslate gSource 'descHallCommemoration { text:commemorationText })

						(objTranslate gSource 'descHallBusy)
						)
					)
			</Text>
			<Text id="descHallBusy">
				The meeting hall is busy with commercial activity; everyone goes about their business.
			</Text>
			<Text id="descHallCommemoration">
				The hall is empty, but in the corner you can see %text%.
			</Text>
		</Language>
	</Type>

<!-- RESOURCES -->

	<Image UNID="&rsCommonwealthArmoredColony;"	bitmap="Resources\CommonwealthColonyArmored.jpg" bitmask="Resources\CommonwealthColonyArmoredMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthColony;"		bitmap="Resources\CommonwealthColony.jpg" bitmask="Resources\CommonwealthColonyMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthDryDock;"		bitmap="Resources\CommonwealthDryDock.jpg" bitmask="Resources\CommonwealthDryDockMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthMedicalColony;"	bitmap="Resources\CommonwealthMedicalColony.jpg" bitmask="Resources\CommonwealthMedicalColonyMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthResidentials;"	bitmap="Resources\CommonwealthResidentials.jpg" bitmask="Resources\CommonwealthResidentialsMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthSettlement;"	bitmap="Resources\CommonwealthSettlement.jpg" bitmask="Resources\CommonwealthSettlementMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthSlumsImage;"	bitmap="Resources\CommonwealthSlums.jpg" bitmask="Resources\CommonwealthSlumsMask.bmp"  loadOnUse="true"/>

</TranscendenceModule>
