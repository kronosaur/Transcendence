<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE TranscendenceModule
	[
	<!-- 0160-016F BATTLE ARENA TRACKS -->
	
	<!ENTITY muArenaSlicer					"0x00820160">
	<!ENTITY muArenaSurvivor				"0x00820161">
	<!ENTITY muArenaContender				"0x00820162">
	<!ENTITY muArenaVictor					"0x00820163">
	<!ENTITY muArenaChampion				"0x00820164">
	]>

<TranscendenceModule>

	<Sovereign UNID="&svGladiator;"
			name="gladiators"
			demonym=":a gladiator(s)"

			alignment="constructive chaos"
			>
		<Relationships>
			<Relationship sovereign="&svPlayer;" disposition="enemy" mutual="true"/>
			<Relationship sovereign="&svGladiator;" disposition="enemy"/>
		</Relationships>
	</Sovereign>

	<!-- Battle Arena 

	GLOBAL DATA

	arenaRank:		Status of player in arena:
						Nil						= Player has never fought a battle
						'rookie					= The player fights in 'last ship flying' contests
						'gladiator				= The player fights in one-on-one battles
						'challenger				= The player can challenge Champion (The Slicer)
						'champion				= The player has defeated The Slicer
						'retired				= The player has retired
						'coward					= The player has declined too many times (or escaped the arena)
						'loser					= The player challenged The Slicer and lost
						'washout				= The player never became popular

	arenaRep:		A number representing the player's reputation with the crowd					
					If geq 600, the player is a crowd favorite.

	arenaSkill:		Player's rating. This is computed based on the skill of the ships defeated by
					the player.

	katamiStatus:	Status of Mr. Katami mission:
						Nil						= Never met
						'instructor				= Katami is instructing the player
						'kidnapped				= Katami is at the Black Market station
						'betrayed				= Player ignores Katami
						'rescued				= Katami has been rescued by the player
						'returned				= Player dies against The Slicer
						'dead					= Katami is dead

	EXTRA DATA

	Opponent{n}:	objID for Opponent 0-max

	gladiatorList:	List of objID for all active (not yet killed) gladiators
	markerID:		Marker at the center of the arena
	rookieScore:	Total points accumulated as a rookie

	opponentShots:	Number of shots fired by opponent in this fight
	missileRep:		Current rep gained by firing missiles
	explosionRep:	Current rep gained by explosions

	results:		A list of the skill level of the last 4 opponents fought by the player
					(or 0 for opponents that won)

	EXTRA DATA ON GLADIATOR SHIPS

	arenaSkill:			Skill of gladiator
	arenaPrizeBonus:	Bonus to prize
	arenaRepBonus:		Bonus to reputation
	arenaHome:			Gladiator's home system
	arenaDescription:	Short description

	-->

	<StationType UNID="&stBattleArena;"
			name=				"Battle Arena Maximus"
			sovereign=			"&svCorporate;"
			level=				"2"
				 
			attributes=			"battleArena, battleArenaMaximus, battleArenaSegment, corporate, corporateCustoms, corporateDecon, friendly, generic, human, majorStation, populated"
				 
			dockScreen=			"Main"
			inherit=			"&unidCommonText;"
			defaultBackgroundID="&rsBattleArenaBkgnd;"
				 
			barrier=			"true"
			barrierEffect=		"&efBattleArenaWallHit;"
			canAttack=			"true"
			immutable=			"true"
			paintLayer=			"overhang"
			>

		<!-- Trade and Items -->
		
		<Trade currency="credit" max="100000" replenish="5000">
			<Refuel			criteria="f +BasicFuel; L:1-5;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-6;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-6;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-6;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-6;" priceAdj="100"/>

			<BalanceTrade	criteria="{core.fusionFuel}"		impact="20"/>
			<BalanceTrade	criteria="{human.basicFood}"	impact="20"/>
			<BalanceTrade	criteria="{human.lux}"		impact="20"/>
			<BalanceTrade	criteria="{human.meds}"		impact="20"/>
			<BalanceTrade	criteria="{human.res}"		impact="20"/>
		</Trade>
		
		<!-- Satellites -->

		<Satellites>
			<Station type="&stBattleArenaStatic;"	xOffset="-345"	yOffset="5"		imageVariant="3"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="345"	yOffset="5"		imageVariant="4"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-655"	yOffset="-20"	imageVariant="2"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="655"	yOffset="-20"	imageVariant="5"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-915"	yOffset="-135"	imageVariant="1"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="915"	yOffset="-135"	imageVariant="6"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-1185"	yOffset="-275"	imageVariant="11"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="1185"	yOffset="-275"	imageVariant="12"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-1225"	yOffset="-520"	imageVariant="0"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="1225"	yOffset="-520"	imageVariant="17"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-1265"	yOffset="-765"	imageVariant="7"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="1265"	yOffset="-765"	imageVariant="18"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-1155"	yOffset="-1035"	imageVariant="8"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="1155"	yOffset="-1035"	imageVariant="19"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-885"	yOffset="-1163"	imageVariant="9"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="885"	yOffset="-1163"	imageVariant="14"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-615"	yOffset="-1283"	imageVariant="10"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="615"	yOffset="-1283"	imageVariant="13"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-360"	yOffset="-1318"	imageVariant="15"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="360"	yOffset="-1318"	imageVariant="16"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="0"		yOffset="-1390"	imageVariant="21"	objName="arenaDoor"	segment="true"/>
		</Satellites>
		
		<!-- Image and Effects -->
		
		<Image			imageID="&rsBattleArenaSegments;" imageX="1240" imageY="0"    imageWidth="320" imageHeight="280"/>
		
		<DockingPorts>
			<Port x="-105"	y="-140" />
			<Port x="0"		y="-140" />
			<Port x="105"	y="-140" />
		</DockingPorts>
		
		<!-- Events and Data -->

		<InitialData>
			<Data id="results">(0 0 0 0)</Data>
			<Data id="rookieScore">0</Data>
		</InitialData>

		<Events>
			<GetGlobalAchievements>
				(block (
					(arenaRank (typGetData &stBattleArena; 'arenaRank))
					(katamiStatus (typGetData &stBattleArena; 'katamiStatus))
					(usedIllegal (typGetData &stBattleArena; 'usedIllegal))
					(usedMilitary (typGetData &stBattleArena; 'usedMilitary))
					(usedAlien (typGetData &stBattleArena; 'usedAlien))
					)
					(append
						(if (and arenaRank (!= arenaRank 'rookie))
							(list (list
								(typTranslate &stBattleArena; (cat "achievement.arena." arenaRank))
								Nil 
								(typTranslate &unidCommonText; 'achievementsAndRegrets)
								))
							)

						(if (and katamiStatus (!= katamiStatus 'instructor) (!= katamiStatus 'kidnapped))
							(list (list
								(typTranslate &stBattleArena; (cat "achievement.katami." katamiStatus))
								Nil
								(typTranslate &unidCommonText; 'achievementsAndRegrets)
								))
							)
						
						(if usedIllegal
							(list (list
								"Used illegal items in the Arena"
								Nil
								(typTranslate &unidCommonText; 'notes)
								))
							)
						(if usedMilitary
							(list (list
								"Used military items in the Arena"
								Nil
								(typTranslate &unidCommonText; 'notes)
								))
							)
						(if usedAlien
							(list (list
								"Used alien items in the Arena"
								Nil
								(typTranslate &unidCommonText; 'notes)
								))
							)
							
						;	Missions
						(rpgMissionAchievements &stBattleArena; "* +gladiatorFight;")
						)
					)
			</GetGlobalAchievements>

			<GetRumors>
				(append
					{
						attributes: 'commonwealthHabitat
						priority: 100
						textID: (cat "rumor.commonwealthHabitat.weapon"
							(seededRandom (objGetDestiny (@ gData 'stationObj)) 1 5)
							)
						}
					{
						attributes: 'commonwealthHabitat
						priority: 100
						textID: (cat "rumor.commonwealthHabitat.shield"
							(seededRandom (objGetDestiny (@ gData 'stationObj)) 1 3)
							)
						}
					(rpgRumorAdd 'commonwealthContainer (make 'sequence 1 4) 100)
					)
			</GetRumors>

			<OnGlobalUniverseLoad>
				;	If we're loading because of a resurrect, then update any arena missions
				(if (= aReason 'resurrect)
					(enum (msnFind "a +arenaCombat;") theMission
						(msnFireEvent theMission 'OnPlayerResurrect)
						)
					)
			</OnGlobalUniverseLoad>

			<OnCreate>
				(block (classList gladiatorList markerObj)
					; Load the list of standard gladiator classes
					(setq classList (typFind "s +battleArena; +gladiator"))

					; Create for all the created gladiators
					(setq gladiatorList Nil)

					; Loop over all classes
					(enum classList theClass
						(for i 1 (random '(1 1 1 2 2 3))
							(block (theShip)
								(setq theShip (bamCreateGladiator gSource theClass))
								(setq gladiatorList (append gladiatorList (objGetID theShip)))
								)
							)
						)

					; Remember the list of gladiators
					(objSetData gSource "gladiatorList" (shuffle gladiatorList))
					
					; Make sure doors are open (we need to do this to set the barrier flag
					; property).
					(bamDoorsOpen)

					;	Create a marker at the centre of the arena
					(setq markerObj (sysCreateMarker "battleArenaCenter" (sysVectorPolarOffset gSource 270 28) &svCorporate;))
					(objSetData gSource 'markerID (objGetID markerObj))
					)
			</OnCreate>

			<OnSystemWeaponFire>
				(switch
					;	If this is a repeat, then ignore
					(!= aFireRepeat 0)
						Nil
						
					;	If the player fires a missile (or other expensive disposable) she gets a bonus
					(= aWeaponObj gPlayerShip)
						(block (
							(theLevel (itmGetLevel aWeaponUNID))
							)
							(if (itmMatches aWeaponUNID "m &gt;=$5")
								(objIncData gSource "missileRep" (multiply theLevel (subtract theLevel 1)))
								)
							)

					;	Count up the number of times that the opponent fires
					(= (objGetID aWeaponObj) (objGetData gSource "Opponent1"))
						(objIncData gSource "opponentShots")
					)
			</OnSystemWeaponFire>

			<OnSystemExplosion>
				;	Each explosion is +50
				(objIncData gSource "explosionRep" 50)
			</OnSystemExplosion>
		</Events>

		<DockScreens>
			<Main>
				<InitialPane>
					(block (theMission)
						(switch
							(setq theMission (msnFind gSource "aSP +arenaCombat;"))
								(if (msnFireEvent theMission 'OnDrawAllowed)
									'CheckDraw
									'StillFighting
									)

							'Default
							)
						)
				</InitialPane>

				<Panes>
					<Default descID="descWelcome">
						<Actions>
						<!--
							<Action name="Purchase Tickets" default="1" key="P">
							</Action>
						-->

							<Action id="actionGladiatorsQuarters" default="1">
								(block (
									(arenaRank (objGetTypeData gSource "arenaRank"))
									(matchCount (count (msnFind gSource "rS +gladiatorFight;")))
									theMission
									)
									(switch
										(setq theMission (rpgMissionGetAssignment {
												missionCriteria: "n +battleArena;"
												}))
											(scrShowScreen gScreen &dsRPGMission; {
												missionObj: theMission
												})

										(not arenaRank)
											(scrShowPane gScreen "FirstFight")

										(= arenaRank 'rookie)
											(scrShowPane gScreen "NoMoreMelees")

										(= arenaRank 'gladiator)
											(switch
												(not (objGetTypeData gSource "katamiStatus"))
													(scrShowPane gScreen "KatamiIntro")

												(and (geq matchCount 16)
														(ls (objGetTypeData gSource "arenaRep") 500))
													(scrShowPane gScreen "NoMoreGladiators")

												(scrShowScreen gScreen &dsBattleArenaOpponentList;)
												)

										(= arenaRank 'champion)
											(scrShowPane gScreen "Champion")

										(scrShowPane gScreen "Loser")
										)
									)
							</Action>

							<Action id="actionDockServices">
								(rpgDockServices gPlayerShip {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>

					<NoMoreMelees descID="descNoMoreMelees">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</NoMoreMelees>

					<KatamiIntro descID="descKatamiIntro1">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen 'KatamiIntro2)
							</Action>
						</Actions>
					</KatamiIntro>

					<KatamiIntro2 descID="descKatamiIntro2">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(block Nil
									(objSetTypeData gSource 'katamiStatus 'instructor)
									(scrShowPane gScreen "Default")
									(scrShowScreen gScreen &dsBattleArenaOpponentList;)
									)
							</Action>
						</Actions>
					</KatamiIntro2>

					<GladiatorDraw descID="descGladiatorDraw">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</GladiatorDraw>

					<NoMoreGladiators descID="descNoMoreGladiators">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(block Nil
									(scrShowPane gScreen "Default")
									(objSetTypeData gSource "arenaRank" 'washout)
									)
							</Action>
						</Actions>
					</NoMoreGladiators>

					<Champion>
						<OnPaneInit>
							(if (or (= (objGetTypeData gSource 'katamiStatus) 'instructor)
									(= (objGetTypeData gSource 'katamiStatus) 'rescued)
									)
								(scrSetDescTranslate gScreen "descChampion:katami")
								(scrSetDescTranslate gScreen "descChampion:empty")
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</Champion>

					<Loser>
						<OnPaneInit>
							(if (or (= (objGetTypeData gSource "katamiStatus") 'instructor)
									(= (objGetTypeData gSource "katamiStatus") 'rescued)
									)
								(scrSetDescTranslate gScreen "descLoser:katami")
								(scrSetDescTranslate gScreen "descLoser:empty")
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</Loser>

					<FirstFight descID="descFirstFight">
						<Actions>
							<Action id="actionSign" default="1">
								(block Nil
									(objSetTypeData gSource "arenaRank" 'rookie)
									(scrShowPane gScreen 'Default)
									(scrShowScreen gScreen &dsRPGMission; {
										missionObj: (msnCreate &msBattleArenaMelee; gSource)
										})
									)
							</Action>

							<Action id="actionBackOut" cancel="1">
								(scrShowScreen gScreen &dsRPGMessage; {
									textID:'descChicken
									nextScreen:'Main
									})
							</Action>
						</Actions>
					</FirstFight>

					<StillFighting descID="descStillFighting">
						<Actions>
							<Action id="actionUndock" default="1" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</StillFighting>
					
					<CheckDraw>
						<OnPaneInit>
							(block (
								(theMission (msnFind gSource "Pa +arenaCombat;"))
								(opponentObj (objGetObjByID (msnGetData theMission 'opponentID)))
								)
								;	Enemy stops attacking
								(shpOrderImmediate opponentObj 'wait)

								;	Description
								(scrSetDescTranslate gScreen 'descDrawOrNot)
								)
						</OnPaneInit>
						
						<Actions>
							<Action id="actionDrawYes" default="1">
								(block (
									(theMission (msnFind gSource "aSP +arenaCombat;"))
									(opponentObj (objGetObjByID (msnGetData theMission 'opponentID)))
									)
									;	The match is over
									(shpCancelOrder opponentObj)
									(msnFailure theMission 'draw)
									(msnSetProperty theMission 'isDebriefed True)

									;	Katami debrief
									(scrShowPane gScreen 'GladiatorDraw)
									)
							</Action>
							
							<Action id="actionDrawNo" cancel="1">
								(block (
									(theMission (msnFind gSource "aSP +arenaCombat;"))
									(opponentObj (objGetObjByID (msnGetData theMission 'opponentID)))
									)
									;	Attack continues
									(shpCancelOrder opponentObj)

									;	Done
									(scrExitScreen gScreen)
									)
							</Action>
						</Actions>
					</CheckDraw>

					<PlayerLeft descID="descPlayerLeft">
						<Actions>
							<Action id="actionUndock" default="1" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</PlayerLeft>
				</Panes>
			</Main>
		</DockScreens>
		
		<Language>
			<Text id="actionGladiatorsQuarters">[G]ladiators' Quarters</Text>
			<Text id="actionDrawYes">[A]ccept a Draw</Text>
			<Text id="actionDrawNo">[C]ontinue Fighting</Text>
			<Text id="actionSign">[S]ign</Text>
			<Text id="actionBackOut">[B]ack Out</Text>
			<Text id="actionFight">[F]ight!</Text>
			
			<Text id="descWelcome">

				Welcome to Battle Arena Maximus! Prepare yourself for the greatest show in space!
				Watch as the best pilots in the Commonwealth compete in mortal combat. The action
				is so real you'll swear its faked! See your ticket agent for reservations.
				Enquire within to join the elite combatants.

			</Text>
			<Text id="descDrawOrNot">

				An Arena official looks at the battle metrics:
					
				"The crowd is bored and you've officially passed the minimum battle time.
				Do you want to declare a draw?"

			</Text>
			<Text id="descGladiatorDraw">

				Mr. Katami looks disappointed:
					
				"I knew that opponent would be hard to defeat!
				But you survived and now we can learn from our mistake. Perhaps you need to
				upgrade your weapons."

			</Text>
			<Text id="descNoMoreGladiators">

				Katami looks disappointed:

				"I'm sorry, but I was not able to teach you properly. The crowd 
				no longer wants to see you fight."

			</Text>
			<Text id="descFirstFight">

				"Welcome, citizen! You are about to join an elite group of men and women who
				have conquered their fears and proven their courage and skills in the ultimate
				test&#x97;mortal combat."
				
				"All that remains is for you to sign this minor release indemnifying the
				Maximus Corporation against any liability in the event of harm, death, etc."

			</Text>
			<String id="descChicken">

				"This kind of challenge is not for the weak and fearful. You are wise to decline."

			</String>
			<Text id="descNoMoreMelees">

				"I'm sorry, you don't have the killer spirit that we need in a gladiator.
				I'm afraid you'll just have to watch the matches on the 3DV like everyone else."

			</Text>
			<Text id="descKatamiIntro1">

				As you enter the gladiators' quarters, a short man wearing a simple suit approaches you:
				
				"My name is Mr. Katami and I am prepared to train you. I watched you in the arena.
				You've got skills and a good ship, but that's not enough. You have to be smart, and
				I can teach you how."
				
				"Are you ready?"

			</Text>
			<Text id="descKatamiIntro2">

				"First you must be smart in choosing your opponent. Don't just pick someone
				you can kill easily. Pick a fight the crowd wants to see. Win the crowd and you
				will be a Legendary Hero."
				
				"Are you ready?"

			</Text>
			<String id="descStillFighting">

				"You'll get no help here. Fight your own battles!"

			</String>
			<String id="descPlayerLeft">

				"You're banned from the games for leaving the arena in the middle of battle!"
			
			</String>
			<Text id="descChampion:katami">

				Mr. Katami greets you:

				"It's wonderful to see you again! Let's talk about the old times at the Arena."

			</Text>
			<Text id="descChampion:empty">

				The gladiators' quarters feels cold and empty without Mr. Katami.

			</Text>
			<Text id="descLoser:katami">

				Mr. Katami greets you:

				"It's good to see you again. I'm training someone new now.
				Hopefully they won't disappoint me."

			</Text>
			<Text id="descLoser:empty">

				The gladiators' quarters feels cold and empty without Mr. Katami.

			</Text>

			<Text id="gladiator:novice:1">%gladiator% is a young gladiator from %home%.</Text>
			<Text id="gladiator:novice:2">%gladiator% flies a %ship%.</Text>
			<Text id="gladiator:novice:3">%gladiator% is a novice pilot flying a beautiful %ship%.</Text>
			<Text id="gladiator:champion:1">%gladiator% is a former Champion from %home%.</Text>
			<Text id="gladiator:champion:2">The battle-hardened pilot known as %gladiator% will give you the fight of your life!</Text>
			<Text id="gladiator:champion:3">Death comes quickly when you fight %gladiator%.</Text>

			<Text id="rumor.commonwealthHabitat.weapon1">
				"What's your favorite weapon? Personally I favor the AK505 Ballista. It's
				a monster and it will kill a lot of ships with a single punch. When I hit
				something, I want it to go down, you know what I mean?"
			</Text>
			<Text id="rumor.commonwealthHabitat.weapon2">
				"What's your favorite weapon? Personally I favor a particle beam weapon.
				The latest tech is always going to win in the end. You have to keep up
				with technology or you're just another wreck in the Arena."
			</Text>
			<Text id="rumor.commonwealthHabitat.weapon3">
				"What's your favorite weapon? Personally I favor an omni turbolaser. I say
				a computer can hit a target way better than I can, so why not take
				advantage of that? By the time your opponent has lined up his BFG, you've
				already hit him five times!"
			</Text>
			<Text id="rumor.commonwealthHabitat.weapon4">
				"What's your favorite weapon? Personally I favor a slam cannon, enhanced
				if possible. There's nothing better than the thump-thump sounds of a slam
				cannon hitting your enemy's plasteel!"
			</Text>
			<Text id="rumor.commonwealthHabitat.weapon5">
				"What's your favorite weapon? Personally I favor the RK15 Partisan turret.
				Sure, the wimpy omniturbo is a little faster, but I wanna hit my targets
				with a punch, not shine a damn light in their eyes."
			</Text>
			<Text id="rumor.commonwealthHabitat.shield1">
				"So what kind of shields you got? I think a lot of gladiators underestimate
				how important shields are. Even a good monopole deflector is better than
				nothing. I'd enhance the crap out of it, though."
			</Text>
			<Text id="rumor.commonwealthHabitat.shield2">
				"So what kind of shields you got? I think a lot of gladiators underestimate
				how important shields are. The Cyclotron series are my choice at the moment.
				The S55 has more protection than a class III; better yet, get the S1200."
			</Text>
			<Text id="rumor.commonwealthHabitat.shield3">
				"So what kind of shields you got? I think a lot of gladiators underestimate
				how important shields are. If you can afford the Ceratops series then go for
				it. They're the best against missiles anyway, which is what you're gonna get
				hit with in the Arena."
			</Text>
			<String id="rumor.commonwealthContainer.1">
				"The Slicer is the champion of the Arena! No one has been able to defeat him."
			</String>
			<Text id="rumor.commonwealthContainer.2">
				"I don't watch the Arena games anymore; the Black Market has totally
				infiltrated the show and all the fights are rigged now."
			</Text>
			<Text id="rumor.commonwealthContainer.3">
				"I remember watching Kate Morgental fight in the Arena. She put on a great
				show! I don't know what happened to her; probably working for her father now."
			</Text>
			<Text id="rumor.commonwealthContainer.4">
				"Let me tell you a secret about fighting in the Arena: load up with missiles.
				Who cares about beams and whatnot; a good missile will cut through armor like
				a knife through Salmonite!"
			</Text>

			<Text id="achievement.arena.gladiator">Became a gladiator in the Arena</Text>
			<Text id="achievement.arena.challenger">Earned the right to challenge The Slicer in the Arena</Text>
			<Text id="achievement.arena.champion">Became Legendary Hero of the Arena</Text>
			<Text id="achievement.arena.loser">Defeated by The Slicer in the Arena</Text>
			<Text id="achievement.arena.washout">Disappointed Mr. Katami</Text>

			<Text id="achievement.katami.betrayed">Betrayed Mr. Katami</Text>
			<Text id="achievement.katami.rescued">Rescued Mr. Katami from the Black Market</Text>
			<Text id="achievement.katami.dead">Failed to save Mr. Katami</Text>

			<Text id="rpg.missionTypeDesc">Gladiator fights</Text>

            <Text id="core.mapDescMain">
                Gladiatorial combat
            </Text>
		</Language>
	</StationType>

	<!-- Battle Arena Static Wall -->

	<StationType UNID="&stBattleArenaStatic;"
			name=				"(arena wall segment)"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baBattleArenaSegment;"
				 
			attributes=			"battleArenaSegment"

			barrier=			"true"
			barrierEffect=		"&efBattleArenaWallHit;"
			immutable=			"true"

			noMapLabel=			"true"
			>

		<ImageVariants>
			<Image			imageID="&rsBattleArenaSegments;" imageX="0"    imageY="0"    imageWidth="350" imageHeight="220"/>	<!-- 0 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="350"  imageY="0"    imageWidth="270" imageHeight="270"/>	<!-- 1 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="620"  imageY="0"    imageWidth="250" imageHeight="240"/>	<!-- 2 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="870"  imageY="0"    imageWidth="370" imageHeight="270"/>	<!-- 3 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1560" imageY="0"    imageWidth="370" imageHeight="270"/>	<!-- 4 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1930" imageY="0"    imageWidth="250" imageHeight="240"/>	<!-- 5 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="2180" imageY="0"    imageWidth="270" imageHeight="270"/>	<!-- 6 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="0"    imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 7 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="270"  imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 8 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="540"  imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 9 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="810"  imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 10 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1080" imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 11 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="1450" imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 12 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1720" imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 13 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1990" imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 14 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="0"    imageY="550"  imageWidth="240" imageHeight="200"/>	<!-- 15 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="240"  imageY="550"  imageWidth="240" imageHeight="200"/>	<!-- 16 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="1450" imageY="550"  imageWidth="350" imageHeight="220"/>	<!-- 17 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1800" imageY="550"  imageWidth="270" imageHeight="270"/>	<!-- 18 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="2070" imageY="550"  imageWidth="270" imageHeight="270"/>	<!-- 19 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="480"  imageY="550"  imageWidth="480" imageHeight="440"/>	<!-- 20: Closed Door -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="960"  imageY="550"  imageWidth="480" imageHeight="440"/>	<!-- 21: Open Door -->
		</ImageVariants>

	</StationType>

<!-- DOCK SCREENS -->

	<DockScreen unid="&dsBattleArenaOpponentList;"
			nestedScreen=		"true"
			inherit=			"&dsDockScreenBase;"
			>

		<OnScreenInit>
			(block (
				(arenaSkill (objGetTypeData gSource "arenaSkill"))
				(arenaRep (objGetTypeData gSource "arenaRep"))

				;	 Generate a list of all gladiators that the player can challenge
				(opponentList (bamComputeOpponentList gSource arenaSkill arenaRep))
				)

				; If the list is empty, then we need to add some new opponents
				(if (not opponentList)
					(block (newGladiators)

						; Create some new gladiators
						(for i 1 (random 3 5)
							(setq newGladiators
								(append newGladiators
									(objGetID (bamCreateGladiatorBySkill gSource arenaSkill))
									)
								)
							)

						; Add them to the list
						(objSetData gSource "gladiatorList"
							(append (objGetData gSource "gladiatorList") (shuffle newGladiators))
							)

						; Recompute the opponent list
						(setq opponentList (bamComputeOpponentList gSource arenaSkill arenaRep))

						; If the list is stil empty then just pick a random gladiator
						; from the new crop
						(if (not opponentList)
							(setq opponentList (list (objGetObjByID (random newGladiators))))
							)
						)
					)
				(scrSetData gScreen 'opponentList opponentList)
				)
		</OnScreenInit>

		<Display type="carouselSelector"
				style="shipList"
				>
			<OnDisplayInit>
				(map (scrGetData gScreen 'opponentList) shipObj
					(bamGetGladiatorDetails shipObj)
					)
			</OnDisplayInit>
		</Display>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (
						(theEntry (@ (scrGetListEntry gScreen) 'shipObj))
						(repBonus (objGetData theEntry "arenaRepBonus"))
						(prize (bamComputePrize
							(objGetTypeData gSource "arenaSkill")
							(objGetTypeData gSource "arenaRep")
							(objGetData theEntry "arenaSkill")
							(objGetData theEntry "arenaPrizeBonus")
							))
						(descID (switch
							(geq repBonus 100)	"descGladiator:4"
							(geq repBonus 50)	"descGladiator:3"
							(geq repBonus 25)	"descGladiator:2"
												"descGladiator:1"
							))
						)
						(scrSetDesc gScreen
							(objGetData theEntry "arenaDescription")
							" "
							(scrTranslate gScreen descID {
								gladiator: (objGetName theEntry)
								reward: (fmtCurrency 'credit prize)
								})
							)
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionChallenge" default="1">
						(scrShowPane gScreen "GladiatorFight")
					</Action>

					<Action id="actionCancelSpecial" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>

			<GladiatorFight noListNavigation="true">
				<OnPaneInit>
					(block (
						(theEntry (scrGetListEntry gScreen))
						(theMission (msnCreate &msBattleArenaFight; gSource (@ theEntry 'shipObj)))
						)
						(scrSetData gScreen 'missionObj theMission)
						(scrSetDesc gScreen (msnTranslate theMission 'Briefing))
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionFight" default="1">
						(block (
							(theMission (scrGetData gScreen 'missionObj))
							)
							(msnAccept theMission)
							(scrExitDock gScreen)
							)
					</Action>

					<Action id="actionBackOut" cancel="1">
						(block (
							(theMission (scrGetData gScreen 'missionObj))
							)
							(msnDestroy theMission)
							(scrShowPane gScreen "Default")
							)
					</Action>
				</Actions>
			</GladiatorFight>
		</Panes>

		<Language>
			<Text id="actionChallenge">[C]hallenge!</Text>
			<Text id="actionCancelSpecial">Cance[l]</Text>
			<Text id="actionBackOut">[B]ack Out</Text>
			<Text id="actionFight">[F]ight!</Text>

			<Text id="listSpeed">Max. speed: %speed%</Text>
			<Text id="listArmor">Armor</Text>
			<Text id="listShields">Shields</Text>

			<Text id="descGladiator:4">

				This is the match the audience has been waiting for.
				For defeating %gladiator% you will receive %reward%.

			</Text>
			<Text id="descGladiator:3">

				Defeating %gladiator% will excite the crowd and bring you great fame!
				For defeating %gladiator% you will receive %reward%.

			</Text>
			<Text id="descGladiator:2">

				This is a well-matched opponent that will draw the crowd.
				For defeating %gladiator% you will receive %reward%.

			</Text>
			<Text id="descGladiator:1">

				For defeating %gladiator% you will receive %reward%.

			</Text>
		</Language>
	</DockScreen>

	<!-- G-Type Star -->

	<StationType UNID="&stRigelAureliusStar;"
		name=				"(G class star)"
		scale=				"star"
		sovereign=			"&svNeutral;"
		spaceColor=			"#66664c"
		maxLightRadius=		"300"

		attributes=			"generic, star"
		>

		<ImageEffect>
			<Orb
					style=			"smooth"
					radius=			"490"
					intensity=		"25"
					primaryColor=	"#ffffbf"
					secondaryColor=	"#ffffbf"
					/>
		</ImageEffect>
	</StationType>

	<!-- Rigel Aurelius system -->

	<SystemType UNID="&ssBattleArena;" 
				noRandomEncounters=	"true"
				noExtraEncounters=	"true"
				>

		<Tables>
			<ArmsQuarterStation>
				<Table>
					<Station chance="15" type="&stArmorDealer;" noMapLabel="true">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
					</Station>

					<Station chance="40" type="&stArmsDealer;" noMapLabel="true">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
					</Station>

					<Station chance="25" type="&stArmsDealerMakayev;" noMapLabel="true">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 140)</OnCreate>
					</Station>
					
					<Station chance="20" type="&stArmsDealerRasiermesser;" noMapLabel="true">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 140)</OnCreate>
					</Station>
				</Table>
			</ArmsQuarterStation>

			<CorporateQuarterStation>
				<Table>
					<Station chance="40" type="&stCorporateEnclave;" noMapLabel="true"/>
					<Station chance="45" type="&stCommonwealthDryDock;" noMapLabel="true"/>
					<Station chance="15" type="&stInsuranceCompany;" noMapLabel="true"/>
					<Station chance="15" type="&stHotel;" noMapLabel="true"/>
				</Table>
			</CorporateQuarterStation>

			<MiddleQuarterStation>
				<Table>
					<Station chance="35" type="&stCorporateEnclave;" noMapLabel="true"/>
					<Station chance="30" type="&stCommonwealthResidentials;" noMapLabel="true"/>
					<Station chance="10" type="&stFuelDepot;" noMapLabel="true"/>
					<Station chance="10" type="&stCommonwealthSlums;" noMapLabel="true"/>
					<Station chance="5" type="&stMedicalSuburb;" noMapLabel="true"/>
					<Null chance="10"/>
				</Table>
			</MiddleQuarterStation>

			<LowerQuarterStation>
				<Table>
					<Station chance="25" type="&stCommonwealthSlums;" noMapLabel="true"/>
					<Station chance="30" type="&stContainerHabitat;" noMapLabel="true"/>
					<Station chance="5" type="&stCommonwealthResidentials;" noMapLabel="true"/>
					<Null chance="40"/>
				</Table>
			</LowerQuarterStation>

			<OtherStations>
				<Table>
					<Station chance="20" type="&stCorporateEnclave;"/>
					<Station chance="20" type="&stMiningColony;"/>
					<Station chance="15" type="&stArmorDealer;">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
					</Station>
					<Station chance="15" type="&stArmsDealer;">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
					</Station>
					<Station chance="10" type="&stArmsDealerMakayev;">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 140)</OnCreate>
					</Station>
					<Station chance="10" type="&stCommonwealthSlums;"/>
					<Station chance="10" type="&stFuelDepot;"/>
				</Table>
			</OtherStations>

			<SeverusAsteroid>
				<Table>
					<Station chance="35" type="&stRockyOuterAsteroidSizeA;"/>
					<Station chance="10" type="&stMetallicAsteroidSizeA;"/>
					<Station chance="45" type="&stRockyAsteroidSizeA;"/>
					<Station chance="4" type="&stRockyOuterAsteroidSizeB;"/>
					<Station chance="1" type="&stMetallicAsteroidSizeB;"/>
					<Station chance="5" type="&stRockyAsteroidSizeB;"/>
				</Table>
			</SeverusAsteroid>

			<SeverusTrojans>
				<Group>
					<OrbitalDistribution count="2d25+75" arcLength="720" radialWidth="60">
						<Lookup table="SeverusAsteroid"/>
					</OrbitalDistribution>
				</Group>
			</SeverusTrojans>
		</Tables>

		<SystemGroup>

			<!-- Star -->

			<Station type="&stRigelAureliusStar;" name="Rigel Aurelius"/>

			<AddAttribute attributes="GTypeSystem"/>
			<AddTerritory minRadius="0"		maxRadius="370"		attributes="innerSystem, rockyComp, cinderZone"/>
			<AddTerritory minRadius="370"	maxRadius="620"		attributes="lifeZone, rockyComp, desertZone"/>
			<AddTerritory minRadius="620"	maxRadius="0"		attributes="outerSystem, rockyComp, frostZone"/>

			<!-- Carus -->

			<Orbitals distance="90" angle="random">
				<Group>
					<Primary>
						<Station type="&stRockyPlanetoidSizeG;" 
								name="Carus" 
								showOrbit="true"
								/>
					</Primary>

					<Orbitals distance="18" angle="random">
						<Group>
							<Lookup table="StargateInbound"/>

							<Orbitals count="2" distance="18" angle="equidistant">
								<Station type="&stCommonwealthDryDock;" name="Rigel Dry Dock" noArticle="true"/>

								<Station type="&stCommonwealthNavSign;">
									<InitialData>
										<Data id="languageTable">&ssBattleArena;</Data>
										<Data id="signID">navSign.deathOrGlory.sign</Data>
										<Data id="infoID">navSign.deathOrGlory.info</Data>
									</InitialData>
								</Station>
							</Orbitals>
						</Group>
					</Orbitals>

				</Group>
			</Orbitals>

			<!-- Tacitus -->

			<Orbitals distance="3" scale="light-minute" angle="random">
				<Group>
					<Primary>
						<Station type="&stGreenhouseTerrestrialSizeI;" 
								name="Tacitus" 
								showOrbit="true"
								/>
					</Primary>

					<Orbitals distance="16" angle="equidistant">
						<Lookup table="OtherStations"/>
						<Label attributes="greenhouse, planet, planetary, terrestrial"/>
					</Orbitals>

					<Trojan>
						<Group>
							<Orbitals count="2d4+4" distance="1d24" angle="random">
								<Station type="&stRockyAsteroidSizeA;"/>
							</Orbitals>

							<Orbitals count="1d6" distance="2d8+8" angle="random">
								<Station type="&stRockyAsteroidSizeB;"/>
							</Orbitals>

							<Orbitals distance="2d8+6" angle="random">
								<RandomStation stationCriteria="*enemy" locationAttribs="asteroids, rocky, trojan"/>
							</Orbitals>
						</Group>
					</Trojan>

				</Group>
			</Orbitals>

			<!-- Geta -->

			<Orbitals distance="5" scale="light-minute" angle="random">
				<Group>
					<Primary>
						<Station type="&stDesertTerrestrialSizeH;" 
								name="Geta" 
								showOrbit="true"
								/>
					</Primary>

					<Orbitals distance="16" angle="random">
						<Label attributes="desert, planet, planetary, terrestrial"/>
					</Orbitals>

					<AntiTrojan>
						<Group>
							<Orbitals count="4d4+8" distance="1d48" angle="random">
								<Station type="&stRockyAsteroidSizeA;"/>
							</Orbitals>

							<Orbitals count="2d6" distance="1d36" angle="random">
								<Station type="&stRockyAsteroidSizeB;"/>
							</Orbitals>

							<Orbitals distance="2d8+6" angle="random">
								<RandomStation stationCriteria="*enemy" locationAttribs="asteroids, rocky, trojan"/>
							</Orbitals>
						</Group>
					</AntiTrojan>

				</Group>
			</Orbitals>

			<!-- Severus -->

			<Orbitals distance="9" scale="light-minute" angle="random">
				<Group>
					<Primary>
						<Station type="&stMethaneGasGiantSizeK;" 
								name="Severus" 
								showOrbit="true"
								/>
					</Primary>

					<Orbitals distance="24" angle="equidistant">
						<Lookup table="StargateOutbound"/>
						<Label attributes="gasGiant, methaneGiant, planet, planetary"/>
					</Orbitals>

					<!-- Battle Arena -->

					<Trojan>
						<Offset scale="pixel" yOffset="-320" xOffset="-1024">
							<Station type="&stBattleArena;"/>
							
							<Station type="&stNavBeacon;" imageVariant="1"  xOffset="-328"     yOffset="-1515"/>
							<Station type="&stNavBeacon;" imageVariant="1"  xOffset="1670"     yOffset="-350"/>
							<Station type="&stNavBeacon;" imageVariant="1"  xOffset="-1670"    yOffset="-350"/>
							<Station type="&stNavBeacon;" imageVariant="1"  xOffset="0"		   yOffset="400"/>
							
							<Station type="&stCommonwealthNavSign;"			xOffset="328"	   yOffset="-1515">
								<InitialData>
									<Data id="languageTable">&ssBattleArena;</Data>
									<Data id="signID">navSign.welcome.sign</Data>
									<Data id="infoID">navSign.welcome.info</Data>
								</InitialData>
							</Station>

							<!-- Arms Quarter -->
						
							<Offset scale="pixel"				xOffset="719"	 yOffset="-1709">
								<Station type="&stArmorDealer;" noMapLabel="true">
									<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
								</Station>
							</Offset>

							<Offset scale="pixel"				xOffset="1118"	 yOffset="-1556">
								<Lookup table="ArmsQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="389"	 yOffset="-2174">
								<Lookup table="ArmsQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="839"	 yOffset="-2075">
								<Station type="&stArmsDealer;" noMapLabel="true">
									<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
								</Station>
							</Offset>

							<Offset scale="pixel"				xOffset="1295"	 yOffset="-1934">
								<Lookup table="ArmsQuarterStation"/>
							</Offset>
							
							<!-- Corporate Quarter -->

							<Offset scale="pixel"				xOffset="1592"		 yOffset="-1211">
								<Station type="&stCorporateEnclave;" noMapLabel="true"/>
							</Offset>

							<Offset scale="pixel"				xOffset="1892"		 yOffset="-1523">
								<Station type="&stCommonwealthDryDock;" noMapLabel="true"/>
							</Offset>

							<Offset scale="pixel"				xOffset="1790"		 yOffset="-839">
								<Station type="&stHotel;" noMapLabel="true"/>
							</Offset>

							<Offset scale="pixel"				xOffset="2177"		 yOffset="-1070">
								<Station type="&stInsuranceCompany;" noMapLabel="true"/>
							</Offset>

							<!-- Left Quarter -->
							
							<Offset scale="pixel"				xOffset="-719"	 yOffset="-1709">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-1118"	 yOffset="-1556">
								<Lookup table="LowerQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-389"	 yOffset="-2174">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-839"	 yOffset="-2075">
								<Lookup table="LowerQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-1295"	 yOffset="-1934">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>
							
							<!-- Middle Quarter -->
							
							<Offset scale="pixel"				xOffset="-1592"		 yOffset="-1211">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-1892"		 yOffset="-1523">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-1790"		 yOffset="-839">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-2177"		 yOffset="-1070">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>
							
							<!-- Lower Quarter -->
							
							<Offset scale="pixel"				xOffset="362"	 yOffset="-2722">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="371"	 yOffset="-2983">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="386"	 yOffset="-3286">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="671"	 yOffset="-2698">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="716"	 yOffset="-2983">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="749"	 yOffset="-3274">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="1097"	 yOffset="-2632">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="1169"	 yOffset="-2881">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="1235"	 yOffset="-3166">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
						</Offset>
					</Trojan>

					<AntiTrojan>
						<Lookup table="SeverusTrojans"/>

						<Orbitals distance="1d8+6" angle="random">
							<Station type="&stBlackMarketStation;"/>
						</Orbitals>
					</AntiTrojan>
				</Group>
			</Orbitals>

			<!-- Create more stargates in case an extension added more links -->

			<Lookup table="HumanSpaceStargates"/>

		</SystemGroup>

		<Language>
			<Text id="navSign.deathOrGlory.sign">Death or\nGlory Awaits</Text>
			<Text id="navSign.deathOrGlory.info">
			
				Welcome, Traveler! You have just arrived at Rigel Aurelius, the 
				universe's most famous tourist destination. Millions of us, from 
				all star systems, have come to shed the constraints of our 
				regimented life and trust to the luck of the Games. 
				
				Join us at Battle Arena Maximus!

			</Text>

			<Text id="navSign.welcome.sign">Welcome,\nGladiator!</Text>
			<Text id="navSign.welcome.info">
			
				Welcome to Battle Arena Maximus! Please enter through the gates 
				and dock at the main station for registration information.

			</Text>
		</Language>
	</SystemType>

<!-- Globals =============================================================== -->

	<Globals>
		(block Nil
			(setq bamComputeArmorLevel (lambda (theObj)
				(block (allArmor)
					(setq allArmor (objGetItems theObj "aI"))
					(if allArmor
						(block (totalLevel)
							(setq totalLevel 0)
							(enum allArmor theArmor 
								(setq totalLevel (add totalLevel (itmGetLevel theArmor)))
								)
							(divide totalLevel (count allArmor))
							)

						0
						)
					)
				))

			(setq bamComputeOpponentList (lambda (baseObj arenaSkill arenaRep)
				(map (objGetData baseObj 'gladiatorList) 'excludeNil theObjID
					(block (
						(theObj (objGetObjByID theObjID))
						(objSkill (objGetData theObj 'arenaSkill))
						)

						;	Figure out if this ship is willing to fight with the player
						(if (and (leq objSkill (+ arenaSkill 100))
								(geq objSkill (- arenaSkill 100))
								(or (geq arenaRep 600) (leq objSkill 800))
								)
							theObj
							)
						)
					)
				))

			(setq bamComputePrize (lambda (playerSkill playerRep opponentSkill prizeBonus)
				(max
					200
					(intRoundDown
						(add
							(multiply
								(divide playerRep 20)
								(divide (add playerRep (multiply 2 (subtract opponentSkill playerSkill))) 20)
								)
							(if prizeBonus prizeBonus 0)
							)
						25
						)
					)
				))
				
			(setq bamComputeShieldLevel (lambda (theObj)
				(block (theShield)
					(if (setq theShield (item (objGetItems theObj "sI") 0))
						(itmGetLevel theShield)
						0
						)
					)
				))
				
			(setq bamComputeSkill (lambda (battleResults)
				(block (
					;	Find the largest value in the battle results
					(bestResult (max battleResults))
					;	Compute the skill level diff
					(skillDiff (map battleResults 'reduceAverage i (- i bestResult)))
					)
					;	Compute result
					;(add bestResult 200 skillDiff)
					(add (map battleResults 'reduceAverage i i ) 200)
					)
				))
				
			(setq bamComputeWeaponLevel (lambda (theObj)
				(block (allWeapons)
					(setq allWeapons (objGetItems theObj "wI"))
					(if allWeapons
						(block (maxLevel)
							(setq maxLevel 0)
							(enum allWeapons theWeapon
								(if (gr (itmGetLevel theWeapon) maxLevel)
									(setq maxLevel (itmGetLevel theWeapon))
									)
								)
							maxLevel
							)

						0
						)
					)
				))

			(setq bamCreateGladiator (lambda (baseObj shipClass)
				(block (theShip descID)
					; Note: We use a position instead of an object for the creation pos
					; because an object would set the gate timer.
					(setq theShip
						(sysCreateShip
							shipClass
							(objGetPos baseObj)
							&svGladiator;
							)
						)

					; Ignore shields down (so we don't run into the Arena walls)
					(shpSetAISetting theShip 'ignoreShieldsDown True)
					
					; Set the skill level
					(objSetData theShip "arenaSkill"
						(max 200
							(min 1200
								(add 
									(objGetStaticData theShip "arenaSkillBase")
									(random '(-500 -250 -100 -50 -25 -25 0 0 0 +25 +25 +50 +100))
									)
								)
							)
						)

					; Chance of a prize bonus
					(if (geq (random 1 100) 20)
						(objSetData theShip "arenaPrizeBonus" (random '(100 100 100 150 150 150 200 200 200 250 250 300 300 350 400 450 500 750 1000)))

						; Else, chance of a rep bonus
						(if (geq (random 1 100) 20)
							(objSetData theShip "arenaRepBonus" (random '(25 25 25 50 50 100)))
							)
						)

					; Set our description
					(objSetData theShip "arenaHome" (random '("Starton Eridani" "St. Katharine's Star" "Rigel Aurelius" "Centauri" "Kibo")))
					(switch
						(leq (objGetData theShip "arenaSkill") 300)
							(setq descID (cat "gladiator:novice:" (random 1 3)))

						(setq descID (cat "gladiator:champion:" (random 1 3)))
						)
					(objSetData theShip "arenaDescription" (objTranslate gSource descID {
						gladiator: (objGetName theShip)
						home: (objGetData theShip "arenaHome")
						ship: (shpGetClassName theShip 1)
						}))

					; Suspend the ship so that it is not visible until later
					(objSuspend theShip)

					; Return it
					theShip
					)
				))

			(setq bamCreateGladiatorBySkill (lambda (baseObj arenaSkill)
				(block (classList maxSkill minSkill)
					; Create a list of gladiators that are of the appropriate level
					; for the player
					(setq minSkill (subtract arenaSkill 100))
					(setq maxSkill (add arenaSkill 100))

					(setq classList
						(filter (typFind "s +battleArena; +gladiator") theClass
							(and
								(leq (typGetStaticData theClass "arenaSkillBase") maxSkill)
								(geq (typGetStaticData theClass "arenaSkillBase") minSkill)
								)
							)
						)

					; If the class list is empty (which should never happen) pick a
					; tough class
					(if (not classList)
						(setq classList (list &scManticoreG6;))
						)

					; Pick a random class and create the ship
					(bamCreateGladiator baseObj (random classList))
					)
				))

			(setq bamDoorsClose (lambda (arenaObj)
				(block (
					(doorObj (sysGetObjectByName arenaObj "arenaDoor"))
					)
					
					(staSetImageVariant doorObj 20)
					(objSetProperty doorObj 'barrier True)
					(objSetProperty doorObj 'paintLayer 'overhang)
					)
				))

			(setq bamDoorsOpen (lambda (arenaObj)
				(block (
					(doorObj (sysGetObjectByName arenaObj "arenaDoor"))
					)
					
					(staSetImageVariant doorObj 21)
					(objSetProperty doorObj 'barrier Nil)
					(objSetProperty doorObj 'paintLayer Nil)
					)
				))

			(setq bamGetGladiatorDetails (lambda (shipObj)
				(block (
					(armorItem (@ (objGetItems shipObj "aI") 0))
					(shieldItem (@ (objGetItems shipObj "sI") 0))
					(driveItem (or (@ (objGetItems shipObj "vI") 0) &itTritiumPropulsionUpgrade;))
					)
					{
					title: (if (= shipObj gPlayerShip)
						(plyComposeString gPlayer "%name%")
						(objGetName shipObj)
						)
					icon: (shpGetImageDesc shipObj)
					largeIcon: (shpGetImageDesc shipObj { type:'schematic })

					details: (append
						{
						icon: (shpGetImageDesc shipObj 0)
						title: (objGetName shipObj 'generic)
						}
						{
						icon: (itmGetImageDesc driveItem)
						title: (scrTranslate gScreen 'listSpeed {speed: (fmtNumber 'speed (objGetProperty shipObj 'maxSpeed))})
						}
						{
						icon: (itmGetImageDesc armorItem)
						title: (scrTranslate gScreen 'listArmor)
						desc: (or (itmGetName armorItem '(short actual)) "None")
						}
						{
						icon: (itmGetImageDesc shieldItem)
						title: (scrTranslate gScreen 'listShields)
						desc: (or (itmGetName shieldItem '(short actual)) "None")
						}
						(map (objGetItems shipObj "wI") theItem {
							icon: (itmGetImageDesc theItem)
							title: (itmGetName theItem '(short actual capitalize))
							})
						)

					shipObj: shipObj
					})
				))
			)
	</Globals>

<!-- BASE CLASSES -->
	
	<Type unid="&baBattleArenaSegment;">
	</Type>

<!-- RESOURCES -->

	<Image UNID="&rsBattleArenaBkgnd;" bitmap="Resources\BattleArenaScreen.jpg" loadOnUse="true" />
	<Image UNID="&rsBattleArenaSegments;" bitmap="Resources\BattleArenaSegments.jpg" bitmask="Resources\BattleArenaSegmentsMask.bmp" hitMask="Resources\BattleArenaSegmentsHitMask.bmp" loadOnUse="true" />

</TranscendenceModule>
